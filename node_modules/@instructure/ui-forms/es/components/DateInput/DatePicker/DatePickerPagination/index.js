var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import React, { Component } from 'react';
import PropTypes from 'prop-types';

import Button from '@instructure/ui-buttons/lib/components/Button';
import ScreenReaderContent from '@instructure/ui-a11y/lib/components/ScreenReaderContent';
import IconArrowOpenStart from '@instructure/ui-icons/lib/Solid/IconArrowOpenStart';
import IconArrowOpenEnd from '@instructure/ui-icons/lib/Solid/IconArrowOpenEnd';
import themeable from '@instructure/ui-themeable';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._2xTKJRQ {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 0 0.125rem;\n  font-family: ' + theme.fontFamily + ';\n  font-size: ' + theme.fontSize + ';\n  font-weight: ' + theme.fontWeight + ';\n  color: ' + theme.color + ';\n}\n\n.bGS2p1U {\n  font-size: ' + theme.buttonIconSize + ';\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_2xTKJRQ',
  'arrowIcon': 'bGS2p1U'
};

import theme from './theme';

/**
---
parent: DatePicker
---
**/
var DatePickerPagination = (_dec = themeable(theme, styles), _dec(_class = (_temp2 = _class2 = function (_Component) {
  _inherits(DatePickerPagination, _Component);

  function DatePickerPagination() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DatePickerPagination);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePickerPagination.__proto__ || Object.getPrototypeOf(DatePickerPagination)).call.apply(_ref, [this].concat(args))), _this), _this.handlePrevClick = function (e) {
      _this.props.onPrev(e);
    }, _this.handleNextClick = function (e) {
      _this.props.onNext(e);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DatePickerPagination, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: styles.root },
        React.createElement(
          Button,
          {
            variant: 'icon',
            onClick: this.handlePrevClick,
            icon: React.createElement(IconArrowOpenStart, { className: styles.arrowIcon })
          },
          React.createElement(
            ScreenReaderContent,
            null,
            this.props.previousLabel
          )
        ),
        this.props.children,
        React.createElement(
          Button,
          {
            variant: 'icon',
            onClick: this.handleNextClick,
            icon: React.createElement(IconArrowOpenEnd, {
              className: styles.arrowIcon,
              title: this.props.nextLabel
            })
          },
          React.createElement(
            ScreenReaderContent,
            null,
            this.props.nextLabel
          )
        )
      );
    }
  }]);

  DatePickerPagination.displayName = 'DatePickerPagination'
  ;
  return DatePickerPagination;
}(Component), _class2.propTypes = {
  previousLabel: PropTypes.string.isRequired,
  nextLabel: PropTypes.string.isRequired,
  onPrev: PropTypes.func.isRequired,
  onNext: PropTypes.func.isRequired,
  children: PropTypes.node
}, _temp2)) || _class);
export { DatePickerPagination as default };