/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import React from 'react';
import TextInput from '../../../../../ui-forms/lib/components/TextInput';
import Select from '../../../../../ui-forms/lib/components/Select';
import Checkbox from '../../../../../ui-forms/lib/components/Checkbox';
import CheckboxGroup from '../../../../../ui-forms/lib/components/CheckboxGroup';
import RadioInput from '../../../../../ui-forms/lib/components/RadioInput';
import RadioInputGroup from '../../../../../ui-forms/lib/components/RadioInputGroup';
import FormFieldGroup from '../index';

export var inline = function inline() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery',
      messages: [{ text: 'Invalid name', type: 'error' }]
    }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    ),
    React.createElement(
      RadioInputGroup,
      {
        name: 'beverage',
        description: 'Beverage of Choice',
        defaultValue: 'coffee',
        layout: 'columns'
      },
      React.createElement(RadioInput, { label: 'Juice', value: 'juice' }),
      React.createElement(RadioInput, { label: 'Water', value: 'water' }),
      React.createElement(RadioInput, { label: 'Coffee', value: 'coffee' }),
      React.createElement(RadioInput, { label: 'Milk', value: 'milk' }),
      React.createElement(RadioInput, { label: 'Soda', value: 'soda' }),
      React.createElement(RadioInput, { label: 'Hot Tea', value: 'tea' })
    )
  );
};

export var stacked = function stacked() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Morning Preferences',
      layout: 'stacked'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery',
      messages: [{ text: 'Invalid name', type: 'error' }]
    }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    ),
    React.createElement(
      CheckboxGroup,
      {
        name: 'beverage',
        description: 'Favorite Beverages',
        layout: 'columns'
      },
      React.createElement(Checkbox, { label: 'Juice', value: 'juice' }),
      React.createElement(Checkbox, { label: 'Water', value: 'water' }),
      React.createElement(Checkbox, { label: 'Coffee', value: 'coffee' }),
      React.createElement(Checkbox, { label: 'Milk', value: 'milk' }),
      React.createElement(Checkbox, { label: 'Soda', value: 'soda' })
    )
  );
};

export var columns = function columns() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      vAlign: 'top'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery',
      messages: [{ text: 'Invalid name', type: 'error' }]
    }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    ),
    React.createElement(
      RadioInputGroup,
      {
        name: 'beverage',
        description: 'Beverage of Choice',
        defaultValue: 'coffee',
        layout: 'columns'
      },
      React.createElement(RadioInput, { label: 'Juice', value: 'juice' }),
      React.createElement(RadioInput, { label: 'Water', value: 'water' }),
      React.createElement(RadioInput, { label: 'Coffee', value: 'coffee' }),
      React.createElement(RadioInput, { label: 'Milk', value: 'milk' }),
      React.createElement(RadioInput, { label: 'Soda', value: 'soda' }),
      React.createElement(RadioInput, { label: 'Hot Tea', value: 'tea' })
    )
  );
};

export var alignTop = function alignTop() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline',
      vAlign: 'top'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var alignMiddle = function alignMiddle() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var alignBottom = function alignBottom() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline',
      vAlign: 'bottom'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var error = function error() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      vAlign: 'top',
      messages: [{ text: 'You must choose', type: 'error' }]
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var hint = function hint() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      vAlign: 'top',
      messages: [{ text: 'This will help us choose a caterer', type: 'hint' }]
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var success = function success() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      vAlign: 'top',
      messages: [{ text: 'Thanks for participating', type: 'success' }]
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var rowSpacingSmall = function rowSpacingSmall() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline',
      rowSpacing: 'small'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var rowSpacingMedium = function rowSpacingMedium() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline',
      rowSpacing: 'medium'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var rowSpacingLarge = function rowSpacingLarge() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'inline',
      rowSpacing: 'large'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var colSpacingSmall = function colSpacingSmall() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      colSpacing: 'small'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var colSpacingMedium = function colSpacingMedium() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      colSpacing: 'medium'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var colSpacingLarge = function colSpacingLarge() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      colSpacing: 'large'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var startAtSmall = function startAtSmall() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      startAt: 'small'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var startAtMedium = function startAtMedium() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      startAt: 'medium'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var startAtLarge = function startAtLarge() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      startAt: 'large'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};

export var startAtXLarge = function startAtXLarge() {
  return React.createElement(
    FormFieldGroup,
    {
      description: 'Breakfast',
      layout: 'columns',
      startAt: 'x-large'
    },
    React.createElement(TextInput, { label: 'Favorite Breakfast Eatery' }),
    React.createElement(
      Select,
      { label: 'Select Your Favorite Side Dish' },
      React.createElement(
        'option',
        { value: 'apples' },
        'Fresh Fruit'
      ),
      React.createElement(
        'option',
        { value: 'oranges' },
        'Biscuits and Gravy'
      ),
      React.createElement(
        'option',
        { value: 'bananas' },
        'Bacon'
      ),
      React.createElement(
        'option',
        { value: 'watermelon' },
        'English Muffins'
      ),
      React.createElement(
        'option',
        { value: 'pancakes' },
        'Pancakes'
      )
    )
  );
};