'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp; /*
                                   * The MIT License (MIT)
                                   *
                                   * Copyright (c) 2015 - present Instructure, Inc.
                                   *
                                   * Permission is hereby granted, free of charge, to any person obtaining a copy
                                   * of this software and associated documentation files (the "Software"), to deal
                                   * in the Software without restriction, including without limitation the rights
                                   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                   * copies of the Software, and to permit persons to whom the Software is
                                   * furnished to do so, subject to the following conditions:
                                   *
                                   * The above copyright notice and this permission notice shall be included in all
                                   * copies or substantial portions of the Software.
                                   *
                                   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                   * SOFTWARE.
                                   */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _CustomPropTypes = require('@instructure/ui-utils/lib/react/CustomPropTypes');

var _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _isActiveElement = require('@instructure/ui-utils/lib/dom/isActiveElement');

var _isActiveElement2 = _interopRequireDefault(_isActiveElement);

var _passthroughProps = require('@instructure/ui-utils/lib/react/passthroughProps');

var _generateElementId = require('@instructure/ui-utils/lib/dom/generateElementId');

var _generateElementId2 = _interopRequireDefault(_generateElementId);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

var _FormPropTypes = require('../../utils/FormPropTypes');

var _FormPropTypes2 = _interopRequireDefault(_FormPropTypes);

var _FormField = require('../FormField');

var _FormField2 = _interopRequireDefault(_FormField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n.ge5wdS3 {\n  position: relative;\n  display: block;\n}\n\n._1TZAU6l {\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  offset-inline-end: ' + theme.padding + ';\n  offset-inline-start: auto;\n  height: 100%;\n  pointer-events: none;\n  fill: ' + theme.iconColor + ';\n}\n\n[dir="ltr"] ._1TZAU6l {\n  right: ' + theme.padding + ';\n  left: auto;\n}\n\n[dir="rtl"] ._1TZAU6l {\n  left: ' + theme.padding + ';\n  right: auto;\n}\n\n/* stylelint-disable selector-max-type */\n\n._2QfSPig,\ninput[type]._2QfSPig {\n  animation: none 0s ease 0s 1 normal none running;\n  backface-visibility: visible;\n  background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;\n  border: medium none currentColor;\n  border-collapse: separate;\n  border-image: none;\n  border-radius: 0;\n  border-spacing: 0;\n  bottom: auto;\n  box-shadow: none;\n  box-sizing: content-box;\n  caption-side: top;\n  clear: none;\n  clip: auto;\n  color: #000;\n  columns: auto;\n  column-count: auto;\n  column-fill: balance;\n  column-gap: normal;\n  column-rule: medium none currentColor;\n  column-span: 1;\n  column-width: auto;\n  content: normal;\n  counter-increment: none;\n  counter-reset: none;\n  cursor: auto;\n  direction: ltr;\n  display: inline;\n  empty-cells: show;\n  float: none;\n  font-family: serif;\n  font-size: medium;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  font-stretch: normal;\n  line-height: normal;\n  height: auto;\n  hyphens: none;\n  left: auto;\n  letter-spacing: normal;\n  list-style: disc outside none;\n  margin: 0;\n  max-height: none;\n  max-width: none;\n  min-height: 0;\n  min-width: 0;\n  opacity: 1;\n  orphans: 2;\n  outline: medium none invert;\n  overflow: visible;\n  overflow-x: visible;\n  overflow-y: visible;\n  padding: 0;\n  page-break-after: auto;\n  page-break-before: auto;\n  page-break-inside: auto;\n  perspective: none;\n  perspective-origin: 50% 50%;\n  position: static;\n  right: auto;\n  tab-size: 8;\n  table-layout: auto;\n  text-align: left;\n  text-align-last: auto;\n  text-decoration: none;\n  text-indent: 0;\n  text-shadow: none;\n  text-transform: none;\n  top: auto;\n  transform: none;\n  transform-origin: 50% 50% 0;\n  transform-style: flat;\n  transition: none 0s ease 0s;\n  unicode-bidi: normal;\n  vertical-align: baseline;\n  visibility: visible;\n  white-space: normal;\n  widows: 2;\n  width: auto;\n  word-spacing: normal;\n  z-index: auto;\n  all: initial;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  line-height: 1; /* reset global line height */\n  margin: 0;\n  width: 100%;\n  display: block;\n  box-sizing: border-box;\n  transition: all 0.2s ease-out;\n  outline: 0.1875rem solid transparent;\n  outline-offset: -0.5rem;\n  font-family: ' + theme.fontFamily + ';\n  font-weight: ' + theme.fontWeight + ';\n  border: ' + theme.borderWidth + ' ' + theme.borderStyle + ' ' + theme.borderColor + ';\n  border-radius: ' + theme.borderRadius + ';\n  color: ' + theme.color + ';\n  background: ' + theme.background + ';\n  padding: 0 ' + theme.padding + ';\n}\n\n._2QfSPig::-ms-clear, input[type]._2QfSPig::-ms-clear {\n    display: none;\n  }\n\n._2QfSPig:focus, input[type]._2QfSPig:focus {\n    border-color: ' + theme.focusBorderColor + ';\n    outline: 0.1875rem solid ' + theme.focusOutlineColor + ';\n    outline-offset: -0.1875rem;\n    box-shadow: none;\n    box-shadow: initial;\n  }\n\n._2QfSPig[aria-invalid], input[type]._2QfSPig[aria-invalid] {\n    border-color: ' + theme.errorBorderColor + ';\n  }\n\n._2QfSPig[aria-invalid]:focus, input[type]._2QfSPig[aria-invalid]:focus {\n      border-color: ' + theme.errorBorderColor + ';\n      outline-color: ' + theme.errorOutlineColor + ';\n    }\n\n._2QfSPig:-ms-input-placeholder, input[type]._2QfSPig:-ms-input-placeholder {\n    color: ' + theme.placeholderColor + ';\n  }\n\n._2QfSPig::-ms-input-placeholder, input[type]._2QfSPig::-ms-input-placeholder {\n    color: ' + theme.placeholderColor + ';\n  }\n\n._2QfSPig::placeholder, input[type]._2QfSPig::placeholder {\n    color: ' + theme.placeholderColor + ';\n  }\n\n._2QfSPig._3OOddm3, input[type]._2QfSPig._3OOddm3 {\n    cursor: not-allowed;\n    pointer-events: none;\n    opacity: 0.5;\n  }\n\n._2QfSPig._1mY8FNi, input[type]._2QfSPig._1mY8FNi {\n    font-size: ' + theme.smallFontSize + ';\n    height: ' + theme.smallHeight + ';\n  }\n\n._2QfSPig._2OTDhYS, input[type]._2QfSPig._2OTDhYS {\n    font-size: ' + theme.mediumFontSize + ';\n    height: ' + theme.mediumHeight + ';\n  }\n\n._2QfSPig._1miW14_, input[type]._2QfSPig._1miW14_ {\n    font-size: ' + theme.largeFontSize + ';\n    height: ' + theme.largeHeight + ';\n  }\n\n._2QfSPig._27BZnh1, input[type]._2QfSPig._27BZnh1 {\n    -webkit-padding-end: calc(' + theme.padding + ' * 2 + 1em);\n            padding-inline-end: calc(' + theme.padding + ' * 2 + 1em);\n    -webkit-padding-start: ' + theme.padding + ';\n            padding-inline-start: ' + theme.padding + ';\n  }\n\n[dir="ltr"] ._2QfSPig._27BZnh1,\n[dir="ltr"] input[type]._2QfSPig._27BZnh1 {\n    padding-right: calc(' + theme.padding + ' * 2 + 1em);\n    padding-left: ' + theme.padding + ';\n  }\n\n[dir="rtl"] ._2QfSPig._27BZnh1,\n[dir="rtl"] input[type]._2QfSPig._27BZnh1 {\n    padding-left: calc(' + theme.padding + ' * 2 + 1em);\n    padding-right: ' + theme.padding + ';\n  }\n\n._2QfSPig._22txGvv, input[type]._2QfSPig._22txGvv {\n    text-align: start;\n  }\n\n[dir="ltr"] ._2QfSPig._22txGvv,\n[dir="ltr"] input[type]._2QfSPig._22txGvv {\n    text-align: left;\n  }\n\n[dir="rtl"] ._2QfSPig._22txGvv,\n[dir="rtl"] input[type]._2QfSPig._22txGvv {\n    text-align: right;\n  }\n\n._2QfSPig._2eRm6O9, input[type]._2QfSPig._2eRm6O9 {\n    text-align: center;\n  }\n\n[dir="ltr"] ._2QfSPig._2eRm6O9,\n[dir="ltr"] input[type]._2QfSPig._2eRm6O9 {\n    text-align: center;\n  }\n\n[dir="rtl"] ._2QfSPig._2eRm6O9,\n[dir="rtl"] input[type]._2QfSPig._2eRm6O9 {\n    text-align: center;\n  }\n\n/* stylelint-enable selector-max-type */\n';
    };

    return tmpl.call(theme, theme);
  },
  'layout': 'ge5wdS3',
  'icon': '_1TZAU6l',
  'input': '_2QfSPig',
  'disabled': '_3OOddm3',
  'small': '_1mY8FNi',
  'medium': '_2OTDhYS',
  'large': '_1miW14_',
  'hasIcon': '_27BZnh1',
  'textAlign--start': '_22txGvv',
  'textAlign--center': '_2eRm6O9'
};


/**
---
category: components/forms
---
**/
var TextInput = (_dec = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(TextInput, _Component);

  function TextInput(props) {
    _classCallCheck(this, TextInput);

    var _this = _possibleConstructorReturn(this, (TextInput.__proto__ || Object.getPrototypeOf(TextInput)).call(this));

    _this.handleInputRef = function (node) {
      _this._input = node;
      _this.props.inputRef(node);
    };

    _this._defaultId = (0, _generateElementId2.default)('TextInput');
    _this._messagesId = (0, _generateElementId2.default)('TextInput-messages');
    return _this;
  }

  /**
  * focus the input element
  */


  _createClass(TextInput, [{
    key: 'focus',
    value: function focus() {
      this._input.focus();
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon() {
      var Icon = this.props.icon;

      if (typeof Icon === 'function') {
        return _react2.default.createElement(
          'span',
          { className: styles.icon, 'aria-hidden': 'true' },
          _react2.default.createElement(Icon, null)
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes;

      var _props = this.props,
          type = _props.type,
          size = _props.size,
          textAlign = _props.textAlign,
          placeholder = _props.placeholder,
          value = _props.value,
          defaultValue = _props.defaultValue,
          disabled = _props.disabled,
          readOnly = _props.readOnly,
          required = _props.required,
          width = _props.width,
          icon = _props.icon;


      var props = (0, _passthroughProps.omitProps)(this.props, TextInput.propTypes);

      var classes = (_classes = {}, _defineProperty(_classes, styles.input, true), _defineProperty(_classes, styles[size], size), _defineProperty(_classes, styles['textAlign--' + textAlign], textAlign), _defineProperty(_classes, styles.hasIcon, icon), _defineProperty(_classes, styles.disabled, disabled), _classes);

      var style = width ? { width: width } : null;

      var descriptionIds = '';
      if (props['aria-describedby']) {
        descriptionIds = '' + props['aria-describedby'];
      }
      if (this.hasMessages) {
        descriptionIds += this._messagesId;
      }

      return _react2.default.createElement(
        _FormField2.default,
        Object.assign({}, (0, _passthroughProps.pickProps)(this.props, _FormField2.default.propTypes), {
          id: this.id,
          messagesId: this._messagesId
        }),
        _react2.default.createElement(
          'span',
          { className: styles.layout },
          _react2.default.createElement('input', Object.assign({}, props, {
            value: value,
            style: style,
            defaultValue: defaultValue,
            placeholder: placeholder,
            ref: this.handleInputRef,
            type: type,
            id: this.id,
            required: required,
            'aria-required': required,
            'aria-invalid': this.invalid ? 'true' : null,
            disabled: disabled || readOnly,
            'aria-disabled': disabled || readOnly ? 'true' : null,
            className: (0, _classnames2.default)(classes),
            'aria-describedby': descriptionIds !== '' ? descriptionIds : null
          })),
          this.renderIcon()
        )
      );
    }
  }, {
    key: 'hasMessages',
    get: function get() {
      return this.props.messages && this.props.messages.length > 0;
    }
  }, {
    key: 'invalid',
    get: function get() {
      return this.props.messages && this.props.messages.findIndex(function (message) {
        return message.type === 'error';
      }) >= 0;
    }
  }, {
    key: 'id',
    get: function get() {
      return this.props.id || this._defaultId;
    }
  }, {
    key: 'focused',
    get: function get() {
      return (0, _isActiveElement2.default)(this._input);
    }
  }, {
    key: 'value',
    get: function get() {
      return this._input.value;
    }
  }]);

  TextInput.displayName = 'TextInput'
  ;
  return TextInput;
}(_react.Component), _class2.propTypes = {
  type: _propTypes2.default.oneOf(['text', 'email', 'url', 'tel', 'search', 'password']),
  label: _propTypes2.default.node.isRequired,
  id: _propTypes2.default.string,
  /**
  * object with shape: `{
  * text: PropTypes.string,
  * type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
  *   }`
  */
  messages: _propTypes2.default.arrayOf(_FormPropTypes2.default.message),
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  layout: _propTypes2.default.oneOf(['stacked', 'inline']),
  textAlign: _propTypes2.default.oneOf(['start', 'center']),
  width: _propTypes2.default.string,
  inline: _propTypes2.default.bool,
  /**
  * Html placeholder text to display when the input has no value. This should be hint text, not a label
  * replacement.
  */
  placeholder: _propTypes2.default.string,
  /**
   * Whether or not to disable the input
   */
  disabled: _propTypes2.default.bool,
  /**
   * Works just like disabled but keeps the same styles as if it were active
   */
  readOnly: _propTypes2.default.bool,
  required: _propTypes2.default.bool,
  /**
  * a function that provides a reference to the actual input element
  */
  inputRef: _propTypes2.default.func,
  /**
  * value to set on initial render
  */
  defaultValue: _propTypes2.default.string,
  /**
  * the selected value (must be accompanied by an `onChange` prop)
  */
  value: _CustomPropTypes2.default.controllable(_propTypes2.default.string),
  /**
  * An icon to display within the input
  */
  icon: _propTypes2.default.func
}, _class2.defaultProps = {
  inline: false,
  type: 'text',
  size: 'medium',
  textAlign: 'start',
  messages: [],
  disabled: false,
  readOnly: false,
  inputRef: function inputRef(input) {},
  layout: 'stacked'
}, _temp)) || _class);
exports.default = TextInput;