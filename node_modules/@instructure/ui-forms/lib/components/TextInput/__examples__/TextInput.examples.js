'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.success = exports.hint = exports.error = exports.withIcon = exports.inline = exports.layoutInline = exports.layoutStacked = exports.large = exports.medium = exports.small = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _IconEmail = require('@instructure/ui-icons/lib/Line/IconEmail');

var _IconEmail2 = _interopRequireDefault(_IconEmail);

var _IconUser = require('@instructure/ui-icons/lib/Line/IconUser');

var _IconUser2 = _interopRequireDefault(_IconUser);

var _IconSearch = require('@instructure/ui-icons/lib/Line/IconSearch');

var _IconSearch2 = _interopRequireDefault(_IconSearch);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var small = exports.small = function small() {
  return _react2.default.createElement(_index2.default, {
    size: 'small',
    type: 'text',
    label: 'Small TextInput',
    placeholder: 'notice the font size' });
}; /*
    * The MIT License (MIT)
    *
    * Copyright (c) 2015 - present Instructure, Inc.
    *
    * Permission is hereby granted, free of charge, to any person obtaining a copy
    * of this software and associated documentation files (the "Software"), to deal
    * in the Software without restriction, including without limitation the rights
    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    * copies of the Software, and to permit persons to whom the Software is
    * furnished to do so, subject to the following conditions:
    *
    * The above copyright notice and this permission notice shall be included in all
    * copies or substantial portions of the Software.
    *
    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    * SOFTWARE.
    */

var medium = exports.medium = function medium() {
  return _react2.default.createElement(_index2.default, {
    size: 'medium',
    type: 'text',
    label: 'Medium (default) TextInput',
    placeholder: 'notice the font size' });
};

var large = exports.large = function large() {
  return _react2.default.createElement(_index2.default, {
    size: 'large',
    type: 'text',
    label: 'Large TextInput',
    placeholder: 'notice the font size' });
};

var layoutStacked = exports.layoutStacked = function layoutStacked() {
  return _react2.default.createElement(_index2.default, {
    layout: 'stacked',
    type: 'text',
    label: 'Default Stacked TextInput',
    placeholder: 'label will appear above the input field' });
};

var layoutInline = exports.layoutInline = function layoutInline() {
  return _react2.default.createElement(_index2.default, {
    layout: 'inline',
    type: 'text',
    label: 'Inline TextInput',
    placeholder: 'label will appear to the left of the input field' });
};

var inline = exports.inline = function inline() {
  return _react2.default.createElement(_index2.default, {
    layout: 'inline',
    icon: _IconSearch2.default,
    inline: true,
    width: '20rem',
    type: 'text',
    label: 'Inline TextInput',
    placeholder: 'inline true must have a width' });
};

var withIcon = exports.withIcon = function withIcon() {
  return _react2.default.createElement(_index2.default, {
    type: 'text',
    icon: _IconUser2.default,
    label: 'Icon TextInput',
    placeholder: 'an icon will appear at the far right of the input' });
};

var error = exports.error = function error() {
  return _react2.default.createElement(_index2.default, {
    type: 'email',
    icon: _IconEmail2.default,
    label: 'Stacked TextInput with error',
    placeholder: 'please enter a valid email address',
    messages: [{ text: 'that does not appear to be a valid email address', type: 'error' }]
  });
};

var hint = exports.hint = function hint() {
  return _react2.default.createElement(_index2.default, {
    type: 'search',
    icon: _IconSearch2.default,
    label: 'Stacked TextInput with hint',
    placeholder: 'this is actually a search box',
    messages: [{ text: 'go ahead and search for what you need', type: 'hint' }]
  });
};

var success = exports.success = function success() {
  return _react2.default.createElement(_index2.default, {
    layout: 'inline',
    type: 'tel',
    label: 'Inline TextInput with success',
    placeholder: 'please enter a valid phone number',
    messages: [{ text: 'that appears to be a valid phone number', type: 'success' }]
  });
};