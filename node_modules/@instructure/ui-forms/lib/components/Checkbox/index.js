'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleFacade = exports.CheckboxFacade = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp; /*
                                   * The MIT License (MIT)
                                   *
                                   * Copyright (c) 2015 - present Instructure, Inc.
                                   *
                                   * Permission is hereby granted, free of charge, to any person obtaining a copy
                                   * of this software and associated documentation files (the "Software"), to deal
                                   * in the Software without restriction, including without limitation the rights
                                   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                   * copies of the Software, and to permit persons to whom the Software is
                                   * furnished to do so, subject to the following conditions:
                                   *
                                   * The above copyright notice and this permission notice shall be included in all
                                   * copies or substantial portions of the Software.
                                   *
                                   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                   * SOFTWARE.
                                   */

var _CheckboxFacade = require('./CheckboxFacade');

Object.defineProperty(exports, 'CheckboxFacade', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CheckboxFacade).default;
  }
});

var _ToggleFacade = require('./ToggleFacade');

Object.defineProperty(exports, 'ToggleFacade', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ToggleFacade).default;
  }
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _keycode = require('keycode');

var _keycode2 = _interopRequireDefault(_keycode);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _CustomPropTypes = require('@instructure/ui-utils/lib/react/CustomPropTypes');

var _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);

var _passthroughProps = require('@instructure/ui-utils/lib/react/passthroughProps');

var _createChainedFunction = require('@instructure/ui-utils/lib/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var _isActiveElement = require('@instructure/ui-utils/lib/dom/isActiveElement');

var _isActiveElement2 = _interopRequireDefault(_isActiveElement);

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _generateElementId = require('@instructure/ui-utils/lib/dom/generateElementId');

var _generateElementId2 = _interopRequireDefault(_generateElementId);

var _warning = require('@instructure/ui-utils/lib/warning');

var _warning2 = _interopRequireDefault(_warning);

var _FormField = require('../FormField');

var _FormPropTypes = require('../../utils/FormPropTypes');

var _FormPropTypes2 = _interopRequireDefault(_FormPropTypes);

var _CheckboxFacade2 = _interopRequireDefault(_CheckboxFacade);

var _ToggleFacade2 = _interopRequireDefault(_ToggleFacade);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._2RCTQp6 {\n  position: relative;\n  width: 100%;\n}\n\n._2dURq7R {\n  animation: none 0s ease 0s 1 normal none running;\n  backface-visibility: visible;\n  background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;\n  border: medium none currentColor;\n  border-collapse: separate;\n  border-image: none;\n  border-radius: 0;\n  border-spacing: 0;\n  bottom: auto;\n  box-shadow: none;\n  box-sizing: content-box;\n  caption-side: top;\n  clear: none;\n  clip: auto;\n  color: #000;\n  columns: auto;\n  column-count: auto;\n  column-fill: balance;\n  column-gap: normal;\n  column-rule: medium none currentColor;\n  column-span: 1;\n  column-width: auto;\n  content: normal;\n  counter-increment: none;\n  counter-reset: none;\n  cursor: auto;\n  direction: ltr;\n  display: inline;\n  empty-cells: show;\n  float: none;\n  font-family: serif;\n  font-size: medium;\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  font-stretch: normal;\n  line-height: normal;\n  height: auto;\n  hyphens: none;\n  left: auto;\n  letter-spacing: normal;\n  list-style: disc outside none;\n  margin: 0;\n  max-height: none;\n  max-width: none;\n  min-height: 0;\n  min-width: 0;\n  opacity: 1;\n  orphans: 2;\n  outline: medium none invert;\n  overflow: visible;\n  overflow-x: visible;\n  overflow-y: visible;\n  padding: 0;\n  page-break-after: auto;\n  page-break-before: auto;\n  page-break-inside: auto;\n  perspective: none;\n  perspective-origin: 50% 50%;\n  position: static;\n  right: auto;\n  tab-size: 8;\n  table-layout: auto;\n  text-align: left;\n  text-align-last: auto;\n  text-decoration: none;\n  text-indent: 0;\n  text-shadow: none;\n  text-transform: none;\n  top: auto;\n  transform: none;\n  transform-origin: 50% 50% 0;\n  transform-style: flat;\n  transition: none 0s ease 0s;\n  unicode-bidi: normal;\n  vertical-align: baseline;\n  visibility: visible;\n  white-space: normal;\n  widows: 2;\n  width: auto;\n  word-spacing: normal;\n  z-index: auto;\n  all: initial;\n  display: block;\n  direction: inherit;\n  text-align: start;\n}\n\n[dir="ltr"] ._2dURq7R {\n  text-align: left;\n}\n\n[dir="rtl"] ._2dURq7R {\n  text-align: right;\n}\n\n._2o2q-QZ {\n  padding: 0;\n  margin: 0;\n  font-size: inherit;\n  line-height: inherit;\n  width: auto;\n  position: absolute;\n  top: 0;\n  offset-inline-start: 0;\n  offset-inline-end: auto;\n  opacity: 0.0001; /* selenium cannot find fully transparent elements */\n}\n\n[dir="ltr"] ._2o2q-QZ {\n  left: 0;\n  right: auto;\n}\n\n[dir="rtl"] ._2o2q-QZ {\n  right: 0;\n  left: auto;\n}\n\n._2QRPWAK {\n  cursor: not-allowed;\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n._1Pg2iEe {\n  display: inline-block;\n  vertical-align: middle;\n  width: auto;\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_2RCTQp6',
  'control': '_2dURq7R',
  'input': '_2o2q-QZ',
  'disabled': '_2QRPWAK',
  'inline': '_1Pg2iEe'
};


/**
---
category: components/forms
---
**/

var Checkbox = (_dec = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Checkbox, _Component);

  function Checkbox(props) {
    _classCallCheck(this, Checkbox);

    var _this = _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call(this, props));

    _this.handleChange = function (e) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          disabled = _this$props.disabled,
          checked = _this$props.checked,
          readOnly = _this$props.readOnly;


      if (disabled || readOnly) {
        e.preventDefault();
        return;
      }

      if (typeof checked === 'undefined') {
        _this.setState({ checked: !_this.state.checked });
      }

      if (typeof onChange === 'function') {
        onChange(e);
      }
    };

    _this.handleKeyDown = function (e) {
      if (_this.props.variant === 'toggle' && (e.keyCode === _keycode2.default.codes.enter || e.keyCode === _keycode2.default.codes.return)) {
        _this._input.click();
        e.preventDefault();
      }
    };

    _this.handleFocus = function (e) {
      _this.setState({
        focused: true
      });
    };

    _this.handleBlur = function (e) {
      _this.setState({
        focused: false
      });
    };

    _this.handleMouseOver = function (e) {
      _this.setState({
        hovered: true
      });
    };

    _this.handleMouseOut = function (e) {
      _this.setState({
        hovered: false
      });
    };

    _this.state = {
      focused: false,
      hovered: false
    };

    if (typeof props.checked === 'undefined') {
      _this.state.checked = !!props.defaultChecked;
    }

    _this._defaultId = (0, _generateElementId2.default)('Checkbox');
    return _this;
  }

  _createClass(Checkbox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      // see https://github.com/facebook/react/issues/1798
      this._input.indeterminate = this.props.indeterminate;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      // see https://github.com/facebook/react/issues/1798
      if (prevProps.indeterminate !== this.props.indeterminate) {
        this._input.indeterminate = this.props.indeterminate;
      }
    }
  }, {
    key: 'focus',
    value: function focus() {
      this._input.focus();
    }
  }, {
    key: 'renderFacade',
    value: function renderFacade() {
      var _props = this.props,
          size = _props.size,
          disabled = _props.disabled,
          variant = _props.variant,
          label = _props.label,
          readOnly = _props.readOnly,
          indeterminate = _props.indeterminate;
      var _state = this.state,
          hovered = _state.hovered,
          focused = _state.focused;


      if (variant === 'toggle') {
        return _react2.default.createElement(
          _ToggleFacade2.default,
          {
            disabled: disabled,
            size: size,
            hovered: hovered,
            focused: focused,
            checked: this.checked,
            readOnly: readOnly
          },
          label
        );
      } else {
        return _react2.default.createElement(
          _CheckboxFacade2.default,
          {
            size: size,
            hovered: hovered,
            focused: focused,
            checked: this.checked,
            indeterminate: indeterminate
          },
          label
        );
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes,
          _this2 = this;

      var _props2 = this.props,
          inline = _props2.inline,
          disabled = _props2.disabled,
          readOnly = _props2.readOnly,
          messages = _props2.messages,
          value = _props2.value,
          onKeyDown = _props2.onKeyDown,
          onFocus = _props2.onFocus,
          onBlur = _props2.onBlur,
          onMouseOver = _props2.onMouseOver,
          onMouseOut = _props2.onMouseOut,
          indeterminate = _props2.indeterminate,
          checked = _props2.checked,
          variant = _props2.variant;


      var props = (0, _passthroughProps.omitProps)(this.props, Checkbox.propTypes);

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles.disabled, disabled), _defineProperty(_classes, styles.inline, inline), _classes);

      (0, _warning2.default)(!(variant === 'toggle' && indeterminate), '[Checkbox] The `toggle` variant does not support the `indeterminate` property. Use the `simple` variant instead.');

      /* eslint-disable jsx-a11y/mouse-events-have-key-events */

      return _react2.default.createElement(
        'div',
        {
          className: (0, _classnames2.default)(classes),
          onMouseOver: (0, _createChainedFunction2.default)(onMouseOver, this.handleMouseOver),
          onMouseOut: (0, _createChainedFunction2.default)(onMouseOut, this.handleMouseOut)
        },
        _react2.default.createElement('input', Object.assign({}, props, {
          id: this.id,
          value: value,
          type: 'checkbox',
          ref: function ref(c) {
            _this2._input = c;
          },
          disabled: disabled || readOnly ? 'true' : null,
          'aria-disabled': disabled || readOnly ? 'true' : null,
          'aria-checked': indeterminate ? 'mixed' : checked ? 'true' : 'false',
          className: styles.input,
          onChange: this.handleChange,
          onKeyDown: (0, _createChainedFunction2.default)(onKeyDown, this.handleKeyDown),
          onFocus: (0, _createChainedFunction2.default)(onFocus, this.handleFocus),
          onBlur: (0, _createChainedFunction2.default)(onBlur, this.handleBlur),
          checked: this.checked
        })),
        _react2.default.createElement(
          'label',
          { htmlFor: this.id, className: styles.control },
          this.renderFacade(),
          _react2.default.createElement(_FormField.FormFieldMessages, { messages: messages })
        )
      );

      /* eslint-enable jsx-a11y/mouse-events-have-key-events */
    }
  }, {
    key: 'id',
    get: function get() {
      return this.props.id || this._defaultId;
    }
  }, {
    key: 'checked',
    get: function get() {
      return typeof this.props.checked === 'undefined' ? this.state.checked : this.props.checked;
    }
  }, {
    key: 'focused',
    get: function get() {
      return (0, _isActiveElement2.default)(this._input);
    }
  }]);

  Checkbox.displayName = 'Checkbox'
  ;
  return Checkbox;
}(_react.Component), _class2.propTypes = {
  label: _propTypes2.default.node.isRequired,
  id: _propTypes2.default.string,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
  * object with shape: `{
  * text: PropTypes.string,
  * type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
  *   }`
  */
  messages: _propTypes2.default.arrayOf(_FormPropTypes2.default.message),
  /* whether to set the input to checked or not on initial render */
  defaultChecked: _propTypes2.default.bool,
  /**
  * whether the input is checked or not (must be accompanied by an `onChange` prop)
  */
  checked: _CustomPropTypes2.default.controllable(_propTypes2.default.bool, 'onChange', 'defaultChecked'),
  /**
  * when used with the `checked` prop, the component will not control its own state
  */
  onChange: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func,
  onMouseOver: _propTypes2.default.func,
  onMouseOut: _propTypes2.default.func,
  /**
   * Whether or not to disable the checkbox
   */
  disabled: _propTypes2.default.bool,
  /**
   * Works just like disabled but keeps the same styles as if it were active
   */
  readOnly: _propTypes2.default.bool,
  /**
  * Visual state showing that child checkboxes are a combination of checked and unchecked
  */
  indeterminate: _propTypes2.default.bool,
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  variant: _propTypes2.default.oneOf(['simple', 'toggle']),
  inline: _propTypes2.default.bool
}, _class2.defaultProps = {
  size: 'medium',
  variant: 'simple',
  disabled: false,
  inline: false,
  indeterminate: false
}, _temp)) || _class);
exports.default = Checkbox;