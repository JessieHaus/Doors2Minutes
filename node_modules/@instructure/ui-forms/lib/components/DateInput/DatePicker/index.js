'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DatePickerPagination = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp; /*
                                   * The MIT License (MIT)
                                   *
                                   * Copyright (c) 2015 - present Instructure, Inc.
                                   *
                                   * Permission is hereby granted, free of charge, to any person obtaining a copy
                                   * of this software and associated documentation files (the "Software"), to deal
                                   * in the Software without restriction, including without limitation the rights
                                   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                   * copies of the Software, and to permit persons to whom the Software is
                                   * furnished to do so, subject to the following conditions:
                                   *
                                   * The above copyright notice and this permission notice shall be included in all
                                   * copies or substantial portions of the Software.
                                   *
                                   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                   * SOFTWARE.
                                   */

var _DatePickerPagination = require('./DatePickerPagination');

Object.defineProperty(exports, 'DatePickerPagination', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_DatePickerPagination).default;
  }
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _keycode = require('keycode');

var _keycode2 = _interopRequireDefault(_keycode);

var _CustomPropTypes = require('@instructure/ui-utils/lib/react/CustomPropTypes');

var _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);

var _I18nPropTypes = require('@instructure/ui-i18n/lib/utils/I18nPropTypes');

var _I18nPropTypes2 = _interopRequireDefault(_I18nPropTypes);

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _DateTime = require('@instructure/ui-i18n/lib/DateTime');

var _DateTime2 = _interopRequireDefault(_DateTime);

var _Locale = require('@instructure/ui-i18n/lib/Locale');

var _Locale2 = _interopRequireDefault(_Locale);

var _warning = require('@instructure/ui-utils/lib/warning');

var _warning2 = _interopRequireDefault(_warning);

var _PresentationContent = require('@instructure/ui-a11y/lib/components/PresentationContent');

var _PresentationContent2 = _interopRequireDefault(_PresentationContent);

var _ScreenReaderContent = require('@instructure/ui-a11y/lib/components/ScreenReaderContent');

var _ScreenReaderContent2 = _interopRequireDefault(_ScreenReaderContent);

var _DatePickerPagination2 = _interopRequireDefault(_DatePickerPagination);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

var _dateHelpers = require('../utils/dateHelpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n/* Variables are defined in ./theme.js */\n\n._3wUsjek {\n  display: inline-flex;\n  flex-direction: column;\n  align-items: stretch;\n  font-size: ' + theme.fontSize + ';\n  font-family: ' + theme.fontFamily + ';\n  font-weight: ' + theme.fontWeight + ';\n  color: ' + theme.color + ';\n  background: ' + theme.background + ';\n}\n\n._3bFPXYp {\n  text-align: center;\n}\n\n[dir="ltr"] ._3bFPXYp {\n  text-align: center;\n}\n\n[dir="rtl"] ._3bFPXYp {\n  text-align: center;\n}\n\n.uBnvAPI {\n  border-collapse: collapse;\n}\n\n.GP1NC5X {\n  font-weight: ' + theme.headerFontWeight + ';\n}\n\n._1iIVA97 {\n  background-color: ' + theme.background + ';\n  border: none;\n  border-radius: ' + theme.borderRadius + ';\n  outline: none;\n  box-sizing: border-box;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  touch-action: manipulation;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  font-size: ' + theme.fontSize + ';\n  padding: ' + theme.cellPadding + ';\n  text-align: center;\n  min-width: ' + theme.cellMinWidth + ';\n  min-height: ' + theme.cellMinHeight + ';\n  position: relative;\n  overflow: visible;\n}\n\n[dir="ltr"] ._1iIVA97 {\n  text-align: center;\n}\n\n[dir="rtl"] ._1iIVA97 {\n  text-align: center;\n}\n\n/*\n    Abandoning use of ::before pseudo element for :focus for now to keep\n    Edge 15 happy\n  */\n\n._1iIVA97:focus {\n    box-shadow:\n      inset 0 0 0 0.125rem ' + theme.background + ',\n      0 0 0 0.0625rem ' + theme.focusOutline + ';\n  }\n\n/*\n    order here is important for proper contrast when selected and today are\n    outside the rendered month\n  */\n\n._1iIVA97._1j_lIqa {\n    color: ' + theme.otherMonthColor + ';\n  }\n\n._1iIVA97._3rTnMWz {\n    background-color: ' + theme.todayBackground + ';\n    border-radius: ' + theme.todayBorderRadius + ';\n    color: ' + theme.todayColor + ';\n  }\n\n._1iIVA97._1YFktyk {\n    background-color: ' + theme.selectedBackground + ';\n    border-radius: ' + theme.borderRadius + ';\n    color: ' + theme.selectedColor + ';\n  }\n\n._26XwoZ0 {\n  text-align: center;\n  margin: ' + theme.labelMargin + ';\n  padding: ' + theme.labelPadding + ';\n}\n\n[dir="ltr"] ._26XwoZ0 {\n  text-align: center;\n}\n\n[dir="rtl"] ._26XwoZ0 {\n  text-align: center;\n}\n\n._3ZbR_qY {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_3wUsjek',
  'calendar': '_3bFPXYp',
  'table': 'uBnvAPI',
  'header': 'GP1NC5X',
  'cell': '_1iIVA97',
  'outside': '_1j_lIqa',
  'today': '_3rTnMWz',
  'selected': '_1YFktyk',
  'label': '_26XwoZ0',
  'disabled': '_3ZbR_qY'
};


/**
---
parent: DateInput
---
**/
var DatePicker = (_dec = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(DatePicker, _Component);

  function DatePicker(props, context) {
    _classCallCheck(this, DatePicker);

    var _this = _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props, context));

    _this.findNextEnabledDay = function (date, eventKeycode) {
      var currentIteration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var iterationMax = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 60;

      switch (eventKeycode) {
        case _keycode2.default.codes.left:
          date.subtract(1, 'days');
          break;
        case _keycode2.default.codes.right:
          date.add(1, 'days');
          break;
        case _keycode2.default.codes.up:
          date.subtract(7, 'days');
          break;
        case _keycode2.default.codes.down:
          date.add(7, 'days');
          break;
        default:
          break;
      }

      // Since we allow a datesDisabled callback function, the set of disabled dates is non
      // deterministic, which means without this check the function could recurse infinitely.
      if (currentIteration >= iterationMax) {
        return null;
      } else if ((0, _dateHelpers.isDayDisabled)(date, _this.props.disabledDaysOfWeek, _this.props.disabledDays)) {
        return _this.findNextEnabledDay(date, eventKeycode, currentIteration + 1);
      } else {
        return date;
      }
    };

    _this.handleCalendarKeyDown = function (e) {
      var _keycode$codes = _keycode2.default.codes,
          up = _keycode$codes.up,
          down = _keycode$codes.down,
          left = _keycode$codes.left,
          right = _keycode$codes.right;


      if (!(e.keyCode === up || e.keyCode === down || e.keyCode === left || e.keyCode === right)) {
        return;
      }

      var focusedDate = _this.parseDate(_this.state.focusedValue);
      var newFocusedDate = _this.findNextEnabledDay(focusedDate, e.keyCode);

      if (!newFocusedDate) {
        return;
      }

      e.preventDefault();
      e.stopPropagation();

      var newFocusedString = newFocusedDate.format();
      _this.updatePagination(newFocusedString);
      _this.setState({ focusedValue: newFocusedString });
    };

    _this.handlePaginationPrev = function (e) {
      var sliderMoment = _this.parseDate(_this.state.renderedValue);
      var sliderString = sliderMoment.subtract(1, 'months').format();
      _this.setState({ renderedValue: sliderString });
      _this.fireRenderedChange(e, sliderString);
    };

    _this.handlePaginationNext = function (e) {
      var sliderMoment = _this.parseDate(_this.state.renderedValue);
      var sliderString = sliderMoment.add(1, 'months').format();
      _this.setState({ renderedValue: sliderString });
      _this.fireRenderedChange(e, sliderString);
    };

    _this.handleDateClick = function (e, clickedString) {
      _this.updatePagination(clickedString);
      _this.setState({ selectedValue: clickedString });
      _this.fireSelectedChange(e, clickedString);
    };

    _this.handleDateFocus = function (focusedString) {
      _this.setState({ focusedValue: focusedString });
    };

    var locale = _this._locale(props, context);
    var timezone = _this._timezone(props, context);

    var defaultTodayValue = _DateTime2.default.now(locale, timezone).hour(0).minute(0).second(0).millisecond(0).format();

    var todayValue = _this._validateDateProp(props.todayValue, defaultTodayValue, 'todayValue', locale, timezone);

    var selectedValue = _this._validateDateProp(props.selectedValue || props.defaultSelectedValue, todayValue, 'selectedValue', locale, timezone);

    var renderedValue = _this._validateDateProp(props.renderedValue || props.defaultRenderedValue, selectedValue, 'renderedValue', locale, timezone);

    var focusedValue = selectedValue;

    _this.state = { selectedValue: selectedValue, renderedValue: renderedValue, todayValue: todayValue, focusedValue: focusedValue };
    return _this;
  }

  _createClass(DatePicker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (nextProps.selectedValue !== this.props.selectedValue || nextProps.renderedValue !== this.props.renderedValue || nextProps.todayValue !== this.props.todayValue) {
        this.setState(function (state) {
          return {
            selectedValue: _this2.validateDateProp(nextProps.selectedValue, state.selectedValue, 'selectedValue'),
            renderedValue: _this2.validateDateProp(nextProps.renderedValue, state.renderedValue, 'renderedValue'),
            todayValue: _this2.validateDateProp(nextProps.todayValue, state.todayValue, 'todayValue')
          };
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.state.focusedValue !== prevState.focusedValue && this._focusedDay) {
        this._focusedDay.focus();
      }
    }
  }, {
    key: '_validateDateProp',
    value: function _validateDateProp(dateStr, fallbackDateStr, propName, locale, timezone) {
      var parsedDate = this._parseDate(dateStr, locale, timezone);
      var isEmpty = !dateStr;
      var isValid = parsedDate.isValid();

      (0, _warning2.default)(isEmpty || isValid, '[DatePicker] Unexpected date format received for ' + propName + ' prop: ' + dateStr);

      return isEmpty || !isValid ? fallbackDateStr : dateStr;
    }
  }, {
    key: 'validateDateProp',
    value: function validateDateProp(dateStr, fallbackDateStr, propName) {
      return this._validateDateProp(dateStr, fallbackDateStr, propName, this.locale, this.timezone);
    }
  }, {
    key: '_locale',
    value: function _locale(props, context) {
      return props.locale || context.locale || _Locale2.default.browserLocale();
    }
  }, {
    key: '_timezone',
    value: function _timezone(props, context) {
      return props.timezone || context.timezone || _DateTime2.default.browserTimeZone();
    }
  }, {
    key: '_parseDate',
    value: function _parseDate(dateStr, locale, timezone) {
      return _DateTime2.default.parse(dateStr, locale, timezone);
    }
  }, {
    key: 'parseDate',
    value: function parseDate(dateStr) {
      return this._parseDate(dateStr, this.locale, this.timezone);
    }
  }, {
    key: 'updatePagination',
    value: function updatePagination(newValueString) {
      var newValueMoment = this.parseDate(newValueString);
      var newMonth = newValueMoment.month();
      var newYear = newValueMoment.year();

      var renderedMoment = this.parseDate(this.state.renderedValue);
      var renderedMonth = renderedMoment.month();
      var renderedYear = renderedMoment.year();

      if (newYear < renderedYear) {
        this.handlePaginationPrev();
        return;
      }

      if (newYear > renderedYear) {
        this.handlePaginationNext();
        return;
      }

      if (newMonth < renderedMonth) {
        this.handlePaginationPrev();
      }

      if (newMonth > renderedMonth) {
        this.handlePaginationNext();
      }
    }
  }, {
    key: 'fireRenderedChange',
    value: function fireRenderedChange(e, newRenderedString) {
      if (typeof this.props.onRenderedChange === 'function') {
        this.props.onRenderedChange(e, newRenderedString);
      }
    }
  }, {
    key: 'fireSelectedChange',
    value: function fireSelectedChange(e, newSelectedString) {
      if (typeof this.props.onSelectedChange === 'function') {
        this.props.onSelectedChange(e, newSelectedString);
      }
    }
  }, {
    key: 'renderHeaderCell',
    value: function renderHeaderCell(day) {
      return _react2.default.createElement(
        'th',
        { className: styles.header, key: day.dayOfYear() },
        _react2.default.createElement(
          _PresentationContent2.default,
          null,
          day.format('dd')
        ),
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          day.format('dddd')
        )
      );
    }
  }, {
    key: 'renderHeader',
    value: function renderHeader(rendered) {
      var _this3 = this;

      var firstDay = rendered.clone().startOf('week');
      var days = [0, 1, 2, 3, 4, 5, 6].map(function (n) {
        return firstDay.clone().add(n, 'd');
      });
      return _react2.default.createElement(
        'tr',
        null,
        days.map(function (d) {
          return _this3.renderHeaderCell(d);
        })
      );
    }
  }, {
    key: 'renderDayCell',
    value: function renderDayCell(day, today, selected, rendered, focused) {
      var _classes,
          _this4 = this;

      var disabled = (0, _dateHelpers.isDayDisabled)(day, this.props.disabledDaysOfWeek, this.props.disabledDays);

      var classes = (_classes = {}, _defineProperty(_classes, styles.cell, true), _defineProperty(_classes, styles.today, (0, _dateHelpers.isSameDay)(day, today)), _defineProperty(_classes, styles.selected, (0, _dateHelpers.isSameDay)(day, selected)), _defineProperty(_classes, styles.outside, !(0, _dateHelpers.isSameMonth)(day, rendered)), _defineProperty(_classes, styles.disabled, disabled), _classes);

      var handleDateClick = disabled ? function (e) {
        return null;
      } : function (e) {
        return _this4.handleDateClick(e, day.format());
      };
      var handleDateFocus = function handleDateFocus() {
        return _this4.handleDateFocus(day.format());
      };
      return _react2.default.createElement(
        'td',
        { key: day.dayOfYear() },
        _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: (0, _classnames2.default)(classes),
            tabIndex: (0, _dateHelpers.isSameMonth)(day, rendered) ? '0' : '-1',
            ref: function ref(c) {
              if ((0, _dateHelpers.isSameDay)(day, focused)) {
                _this4._focusedDay = c;
              }
            },
            onClick: handleDateClick,
            onFocus: handleDateFocus,
            disabled: disabled
          },
          day.format('D')
        )
      );
    }
  }, {
    key: 'renderWeekRow',
    value: function renderWeekRow(firstDay, today, selected, rendered, focused) {
      var _this5 = this;

      return _react2.default.createElement(
        'tr',
        { key: firstDay.week() },
        [0, 1, 2, 3, 4, 5, 6].map(function (n) {
          return _this5.renderDayCell(firstDay.clone().add(n, 'd'), today, selected, rendered, focused);
        })
      );
    }
  }, {
    key: 'renderCalendar',
    value: function renderCalendar(today, selected, rendered, focused) {
      var _this6 = this;

      var firstDay = rendered.clone().startOf('month').startOf('week');
      if (selected) {
        // Copy selected value's time so we don't change it on the user
        firstDay.hour(selected.hour()).minute(selected.minute()).second(selected.second()).millisecond(selected.millisecond());
      }
      return [0, 7, 14, 21, 28, 35].map(function (weekIncrement) {
        var firstOfWeek = firstDay.clone().add(weekIncrement, 'd');
        return _this6.renderWeekRow(firstOfWeek, today, selected, rendered, focused);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this7 = this;

      /* eslint-disable jsx-a11y/no-static-element-interactions */
      var today = this.parseDate(this.state.todayValue);
      var selected = this.parseDate(this.state.selectedValue);
      var rendered = this.parseDate(this.state.renderedValue);
      var focused = this.parseDate(this.state.focusedValue);

      return _react2.default.createElement(
        'div',
        { className: styles.root },
        _react2.default.createElement(
          _DatePickerPagination2.default,
          {
            previousLabel: this.props.previousLabel,
            nextLabel: this.props.nextLabel,
            onPrev: this.handlePaginationPrev,
            onNext: this.handlePaginationNext
          },
          _react2.default.createElement(
            'div',
            { className: styles.label },
            _react2.default.createElement(
              'div',
              null,
              rendered.format('MMMM')
            ),
            _react2.default.createElement(
              'div',
              null,
              rendered.format('YYYY')
            )
          )
        ),
        _react2.default.createElement(
          'div',
          {
            ref: function ref(c) {
              _this7._calendar = c;
            },
            className: styles.calendar,
            onKeyDown: this.handleCalendarKeyDown
          },
          _react2.default.createElement(
            'table',
            { className: styles.table },
            _react2.default.createElement(
              'thead',
              null,
              this.renderHeader(rendered)
            ),
            _react2.default.createElement(
              'tbody',
              null,
              this.renderCalendar(today, selected, rendered, focused)
            )
          )
        )
      );
      /* eslint-enable jsx-a11y/no-static-element-interactions */
    }
  }, {
    key: 'locale',
    get: function get() {
      return this._locale(this.props, this.context);
    }
  }, {
    key: 'timezone',
    get: function get() {
      return this._timezone(this.props, this.context);
    }
  }, {
    key: 'todayValue',
    get: function get() {
      return this.state.todayValue;
    }
  }, {
    key: 'selectedValue',
    get: function get() {
      return this.state.selectedValue;
    }
  }, {
    key: 'renderedValue',
    get: function get() {
      return this.state.renderedValue;
    }
  }, {
    key: 'focusedValue',
    get: function get() {
      return this.state.focusedValue;
    }
  }]);

  DatePicker.displayName = 'DatePicker'
  ;
  return DatePicker;
}(_react.Component), _class2.propTypes = {
  /**
    The label to put on the previous month button of the calendar.
  **/
  previousLabel: _propTypes2.default.string.isRequired,
  /**
    The label to put on the next month button of the calendar.
  **/
  nextLabel: _propTypes2.default.string.isRequired,

  /**
    An ISO 8601 formatted string. The selected value on initial render.
  **/
  defaultSelectedValue: _I18nPropTypes2.default.iso8601,
  /**
    An ISO 8601 formatted string. Must be accompanied by an onSelectedChange property.
    Defaults to today's date.
  **/
  selectedValue: _CustomPropTypes2.default.controllable(_I18nPropTypes2.default.iso8601, 'onSelectedChange', 'defaultSelectedValue'),

  /**
    An ISO 8601 formatted string. The rendered value on initial render.
  **/
  defaultRenderedValue: _I18nPropTypes2.default.iso8601,

  /**
    An ISO 8601 formatted string. Must be accompanied by an onRenderedChange property.
    Defaults to today's date.
  **/
  renderedValue: _CustomPropTypes2.default.controllable(_I18nPropTypes2.default.iso8601, 'onRenderedChange', 'defaultRenderedValue'),

  /**
    An ISO 8601 formatted string. Defaults to the current date. DatePicker doesn't
    attempt to change this value. Defaults to today's date.
  **/
  todayValue: _I18nPropTypes2.default.iso8601,

  /**
    A standard language id
  **/
  locale: _propTypes2.default.string,
  /**
    A timezone identifier in the format: Area/Location
  **/
  timezone: _propTypes2.default.string,

  /**
    Called with the triggering event followed by an ISO 8601 formatted string.
  **/
  onSelectedChange: _propTypes2.default.func,
  /**
    Called with the triggering event followed by an ISO 8601 formatted string.
  **/
  onRenderedChange: _propTypes2.default.func,
  /**
    An array of weekdays that should be unselectable. Each day should be an integer
    corresponding to the day of the week, where 0 = Sunday, 1 = Monday, 2 = Tuesday,
    3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday.
  **/
  disabledDaysOfWeek: _propTypes2.default.array,
  /**
    An array of Date objects that should be unselectable or a callback function
    that gets passed a date and should return a boolean indicating where it is
    unselectable.
  **/
  disabledDays: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func])
}, _class2.defaultProps = {
  disabledDaysOfWeek: [],
  disabledDays: []
}, _class2.contextTypes = {
  locale: _propTypes2.default.string,
  timezone: _propTypes2.default.string
}, _temp)) || _class);
exports.default = DatePicker;