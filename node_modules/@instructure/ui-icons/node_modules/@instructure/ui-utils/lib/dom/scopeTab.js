'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scopeTab;

var _deprecated = require('../react/deprecated');

var _warning = require('../warning');

var _warning2 = _interopRequireDefault(_warning);

var _findTabbable = require('./findTabbable');

var _findTabbable2 = _interopRequireDefault(_findTabbable);

var _findDOMNode = require('./findDOMNode');

var _findDOMNode2 = _interopRequireDefault(_findDOMNode);

var _containsActiveElement = require('./containsActiveElement');

var _containsActiveElement2 = _interopRequireDefault(_containsActiveElement);

var _isActiveElement = require('./isActiveElement');

var _isActiveElement2 = _interopRequireDefault(_isActiveElement);

var _getActiveElement = require('./getActiveElement');

var _getActiveElement2 = _interopRequireDefault(_getActiveElement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scopeTab(element, event) {
  (0, _warning2.default)(false, '[%s] was deprecated in version %s. %s', 'scopeTab', '5.0.0', (0, _deprecated.changedPackageWarning)('ui-utils', 'ui-a11y') || '');
  var node = (0, _findDOMNode2.default)(element);
  var tabbable = (0, _findTabbable2.default)(node);

  if (!tabbable.length) {
    event.preventDefault();
    return;
  }

  // Account for a changing tabindex of the active element
  // (a case that happens with Menu for KO a11y)
  if ((0, _containsActiveElement2.default)(element)) {
    var activeElement = (0, _getActiveElement2.default)();
    if (tabbable.indexOf(activeElement) === -1) {
      tabbable.push(activeElement);
    }
  }

  var finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];
  var leavingFinalTabbable = (0, _isActiveElement2.default)(finalTabbable) ||
  // handle immediate shift+tab after opening with mouse
  (0, _isActiveElement2.default)(node);

  if (!leavingFinalTabbable) return;

  event.preventDefault();
  var target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];
  target.focus();
} /*
   * The MIT License (MIT)
   *
   * Copyright (c) 2015 - present Instructure, Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */