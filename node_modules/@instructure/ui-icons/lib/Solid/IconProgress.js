'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SVGIcon = require('@instructure/ui-svg-images/lib/components/SVGIcon');

var _SVGIcon2 = _interopRequireDefault(_SVGIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconProgress = (_temp = _class = function (_Component) {
  _inherits(IconProgress, _Component);

  function IconProgress() {
    _classCallCheck(this, IconProgress);

    return _possibleConstructorReturn(this, (IconProgress.__proto__ || Object.getPrototypeOf(IconProgress)).apply(this, arguments));
  }

  _createClass(IconProgress, [{
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        _SVGIcon2.default,
        Object.assign({}, this.props, {
          name: 'IconProgress',
          viewBox: '0 0 1920 1920'

        }),
        _react2.default.createElement('path', { d: 'M508.03 510.066l211.928 211.912H239.94V241.997L394.985 397.03C542.351 249.117 742.76 162 959.968 162 1401.186 162 1760 520.866 1760 961.968h-160.006c0-352.866-287.052-639.974-640.026-639.974-173.767 0-334.093 69.757-451.938 188.072zm903.94 903.868l-211.928-211.912h480.019v479.981l-155.046-155.114C1377.649 1674.883 1177.24 1762 960.032 1762 518.814 1762 160 1403.134 160 962.032h160.006c0 352.866 287.052 639.974 640.026 639.974 173.767 0 334.093-69.757 451.938-188.072z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconProgress.displayName = 'IconProgress'
  ;
  return IconProgress;
}(_react.Component), _class.glyphName = 'progress', _class.variant = 'Solid', _class.propTypes = Object.assign({}, _SVGIcon2.default.propTypes), _temp);
exports.default = IconProgress;