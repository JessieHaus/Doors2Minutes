'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SVGIcon = require('@instructure/ui-svg-images/lib/components/SVGIcon');

var _SVGIcon2 = _interopRequireDefault(_SVGIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconMiniArrowDown = (_temp = _class = function (_Component) {
  _inherits(IconMiniArrowDown, _Component);

  function IconMiniArrowDown() {
    _classCallCheck(this, IconMiniArrowDown);

    return _possibleConstructorReturn(this, (IconMiniArrowDown.__proto__ || Object.getPrototypeOf(IconMiniArrowDown)).apply(this, arguments));
  }

  _createClass(IconMiniArrowDown, [{
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        _SVGIcon2.default,
        Object.assign({}, this.props, {
          name: 'IconMiniArrowDown',
          viewBox: '0 0 1920 1920'

        }),
        _react2.default.createElement('path', { d: 'M994.034 1226.26c-18.796 27.296-49.269 27.3-68.067 0L574.893 716.424C556.096 689.128 567.713 667 600.852 667h718.297c33.133 0 44.757 22.125 25.959 49.424L994.034 1226.26z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconMiniArrowDown.displayName = 'IconMiniArrowDown'
  ;
  return IconMiniArrowDown;
}(_react.Component), _class.glyphName = 'mini-arrow-down', _class.variant = 'Line', _class.propTypes = Object.assign({}, _SVGIcon2.default.propTypes), _temp);
exports.default = IconMiniArrowDown;