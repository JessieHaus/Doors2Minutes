var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import SVGIcon from '@instructure/ui-svg-images/lib/components/SVGIcon';

var IconHome = (_temp = _class = function (_Component) {
  _inherits(IconHome, _Component);

  function IconHome() {
    _classCallCheck(this, IconHome);

    return _possibleConstructorReturn(this, (IconHome.__proto__ || Object.getPrototypeOf(IconHome)).apply(this, arguments));
  }

  _createClass(IconHome, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        SVGIcon,
        Object.assign({}, this.props, {
          name: 'IconHome',
          viewBox: '0 0 1920 1920'

        }),
        React.createElement('path', { d: 'M960.16 0L28 932.16l79 78.777 853.16-853.16 853.16 853.16 78.889-78.777L960.16 0zm613.693 1027.34v781.078h-334.86v-557.913h-557.8v557.912H346.445V1027.34H234.751V1920h1450.684v-892.66h-111.582zm-781.078 781.19v-446.442h334.748v446.441H792.775zm55.77-1004.344c0-61.593 49.988-111.582 111.582-111.582 61.593 0 111.582 49.989 111.582 111.582 0 61.594-49.989 111.583-111.582 111.583-61.594 0-111.583-49.99-111.583-111.583zm334.747 0c0-123.075-100.09-223.165-223.165-223.165-123.076 0-223.165 100.09-223.165 223.165 0 123.076 100.09 223.165 223.165 223.165 123.075 0 223.165-100.09 223.165-223.165', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconHome.displayName = 'IconHome'
  ;
  return IconHome;
}(Component), _class.glyphName = 'home', _class.variant = 'Line', _class.propTypes = Object.assign({}, SVGIcon.propTypes), _temp);
export { IconHome as default };