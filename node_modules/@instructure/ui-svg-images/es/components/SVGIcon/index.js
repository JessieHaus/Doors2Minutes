var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';

import themeable from '@instructure/ui-themeable';
import deprecated from '@instructure/ui-utils/lib/react/deprecated';

import InlineSVG from '../InlineSVG';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._25Fesyr {\n  color: inherit;\n  fill: currentColor;\n  vertical-align: middle;\n  line-height: 1;\n  width: 1em;\n  height: 1em;\n}\n\n.Clqgjm- {\n  transform: rotate(90deg);\n}\n\n.c7vXjSd {\n  transform: rotate(180deg);\n}\n\n._33ELFOp {\n  transform: rotate(270deg);\n}\n\n[dir="rtl"] ._2l2dYKS {\n  transform: scale3d(-1, 1, 1);\n}\n\n[dir="rtl"] ._2l2dYKS.Clqgjm- {\n    transform: scale3d(-1, 1, 1) rotate(90deg);\n  }\n\n[dir="rtl"] ._2l2dYKS .c7vXjSd {\n    transform: scale3d(-1, 1, 1) rotate(180deg);\n  }\n\n[dir="rtl"] ._2l2dYKS ._33ELFOp {\n    transform: scale3d(-1, 1, 1) rotate(270deg);\n  }\n\n._2auwMQ0 {\n  font-size: ' + theme.sizeXSmall + ';\n}\n\n.YMa6Fs2 {\n  font-size: ' + theme.sizeSmall + ';\n}\n\n.VcFFJHT {\n  font-size: ' + theme.sizeMedium + ';\n}\n\n._1Klt9LZ {\n  font-size: ' + theme.sizeLarge + ';\n}\n\n._3_ilfaa {\n  font-size: ' + theme.sizeXLarge + ';\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_25Fesyr',
  'rotate--90': 'Clqgjm-',
  'rotate--180': 'c7vXjSd',
  'rotate--270': '_33ELFOp',
  'bidirectional': '_2l2dYKS',
  'size--x-small': '_2auwMQ0',
  'size--small': 'YMa6Fs2',
  'size--medium': 'VcFFJHT',
  'size--large': '_1Klt9LZ',
  'size--x-large': '_3_ilfaa'
};

import theme from './theme';

/**
---
category: components/utilities
---
**/
var SVGIcon = (_dec = themeable(theme, styles), _dec2 = deprecated('5.0.0', {
  width: 'size',
  height: 'size'
}), _dec(_class = _dec2(_class = (_temp = _class2 = function (_Component) {
  _inherits(SVGIcon, _Component);

  function SVGIcon() {
    _classCallCheck(this, SVGIcon);

    return _possibleConstructorReturn(this, (SVGIcon.__proto__ || Object.getPrototypeOf(SVGIcon)).apply(this, arguments));
  }

  _createClass(SVGIcon, [{
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          rotate = _props.rotate,
          className = _props.className,
          size = _props.size,
          bidirectional = _props.bidirectional,
          props = _objectWithoutProperties(_props, ['rotate', 'className', 'size', 'bidirectional']);

      return React.createElement(InlineSVG, Object.assign({}, props, {
        rotate: rotate,
        className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles['rotate--' + rotate], rotate && rotate !== '0'), _defineProperty(_classnames, styles['size--' + size], size), _defineProperty(_classnames, styles.bidirectional, bidirectional), _defineProperty(_classnames, className, className), _classnames))
      }));
    }
  }]);

  SVGIcon.displayName = 'SVGIcon'
  ;
  return SVGIcon;
}(Component), _class2.propTypes = Object.assign({}, InlineSVG.propTypes, {
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  rotate: PropTypes.oneOf(['0', '90', '180', '270']),
  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large', 'x-large']),
  bidirectional: PropTypes.bool
}), _class2.defaultProps = {
  rotate: '0',
  bidirectional: false
}, _temp)) || _class) || _class);


export default SVGIcon;