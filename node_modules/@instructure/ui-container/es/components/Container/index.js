var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import themeable from '@instructure/ui-themeable';
import ThemeablePropTypes from '@instructure/ui-themeable/lib/utils/ThemeablePropTypes';
import CustomPropTypes from '@instructure/ui-utils/lib/react/CustomPropTypes';
import getElementType from '@instructure/ui-utils/lib/react/getElementType';
import { omitProps } from '@instructure/ui-utils/lib/react/passthroughProps';

import deprecated, { changedPackageWarning } from '@instructure/ui-utils/lib/react/deprecated';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._3KtyzrK {\n  display: block;\n}\n\n._1djkbD6 {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n._3rlFDYK {\n  box-sizing: border-box;\n}\n\n._2TgmZgo {\n  text-align: start;\n}\n\n[dir="ltr"] ._2TgmZgo {\n  text-align: left;\n}\n\n[dir="rtl"] ._2TgmZgo {\n  text-align: right;\n}\n\n._3VUinIH {\n  text-align: center;\n}\n\n[dir="ltr"] ._3VUinIH {\n  text-align: center;\n}\n\n[dir="rtl"] ._3VUinIH {\n  text-align: center;\n}\n\n._32msoRT {\n  text-align: end;\n}\n\n[dir="ltr"] ._32msoRT {\n  text-align: right;\n}\n\n[dir="rtl"] ._32msoRT {\n  text-align: left;\n}\n\n._2vqf6hB {\n  max-width: ' + theme.xSmallMaxWidth + ';\n}\n\n.wXvjugg {\n  max-width: ' + theme.smallMaxWidth + ';\n}\n\n._1qughNk {\n  max-width: ' + theme.mediumMaxWidth + ';\n}\n\n.GoMsGEn {\n  max-width: ' + theme.largeMaxWidth + ';\n}\n\n._3DkBWI5 {\n  max-width: 100vw;\n}\n\n._1SL87Uo {\n}\n\n.Mkagy3L {\n  /* stylelint-disable-next-line color-named */\n  outline: 0.0625rem dashed red;\n}\n\n._5PYyu9y {\n  border-style: solid;\n  border-color: ' + theme.borderColor + ';\n  border-width: ' + theme.borderWidth + ';\n  border-radius: ' + theme.borderRadius + ';\n}\n\n._3_3GAcN {\n  box-shadow: ' + theme.boxShadow + ';\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'block': '_3KtyzrK',
  'inline': '_1djkbD6',
  'hasPadding': '_3rlFDYK',
  'textAlign--start': '_2TgmZgo',
  'textAlign--center': '_3VUinIH',
  'textAlign--end': '_32msoRT',
  'x-small': '_2vqf6hB',
  'small': 'wXvjugg',
  'medium': '_1qughNk',
  'large': 'GoMsGEn',
  'fullscreen': '_3DkBWI5',
  'auto': '_1SL87Uo',
  'visualDebug': 'Mkagy3L',
  'withBorder': '_5PYyu9y',
  'withShadow': '_3_3GAcN'
};

import theme from './theme';

/**
---
category: components/layout
---
**/
var Container = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Container, _Component);

  function Container() {
    _classCallCheck(this, Container);

    return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
  }

  _createClass(Container, [{
    key: 'renderSpacingStyles',
    value: function renderSpacingStyles(spacingFromProps, spacingFromTheme) {
      if (typeof spacingFromProps !== 'string') {
        return null;
      }

      var spacing = spacingFromProps.split(' ');
      var spacingStyle = [];

      for (var i = 0; i < spacing.length; i++) {
        var style = spacingFromTheme[spacing[i]];
        if (style) {
          spacingStyle.push(style);
        }
      }

      return spacingStyle.join(' ');
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes;

      var _props = this.props,
          children = _props.children,
          textAlign = _props.textAlign,
          display = _props.display,
          visualDebug = _props.visualDebug,
          size = _props.size,
          padding = _props.padding,
          margin = _props.margin,
          withBorder = _props.withBorder,
          withShadow = _props.withShadow;


      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[display], display !== null), _defineProperty(_classes, styles.visualDebug, visualDebug), _defineProperty(_classes, styles['textAlign--' + textAlign], textAlign), _defineProperty(_classes, styles[size], size), _defineProperty(_classes, styles.hasPadding, padding), _defineProperty(_classes, styles.withBorder, withBorder), _defineProperty(_classes, styles.withShadow, withShadow), _defineProperty(_classes, this.props.className, this.props.className), _classes);

      var style = Object.assign({}, this.props.style, { // eslint-disable-line react/prop-types
        margin: this.renderSpacingStyles(margin, this.marginFromTheme),
        padding: this.renderSpacingStyles(padding, this.paddingFromTheme)
      });

      var ElementType = getElementType(Container, this.props);

      return React.createElement(
        ElementType,
        Object.assign({}, omitProps(this.props, Container.propTypes), {
          className: classnames(classes),
          style: style,
          ref: this.props.elementRef
        }),
        children
      );
    }
  }, {
    key: 'paddingFromTheme',
    get: function get() {
      return {
        0: '0',
        none: '0',
        'xxx-small': this.theme.paddingxxxSmall,
        'xx-small': this.theme.paddingxxSmall,
        'x-small': this.theme.paddingxSmall,
        small: this.theme.paddingSmall,
        medium: this.theme.paddingMedium,
        large: this.theme.paddingLarge,
        'x-large': this.theme.paddingxLarge,
        'xx-large': this.theme.paddingxxLarge
      };
    }
  }, {
    key: 'marginFromTheme',
    get: function get() {
      return {
        auto: 'auto',
        0: '0',
        none: '0',
        'xxx-small': this.theme.marginxxxSmall,
        'xx-small': this.theme.marginxxSmall,
        'x-small': this.theme.marginxSmall,
        small: this.theme.marginSmall,
        medium: this.theme.marginMedium,
        large: this.theme.marginLarge,
        'x-large': this.theme.marginxLarge,
        'xx-large': this.theme.marginxxLarge
      };
    }
  }]);

  Container.displayName = 'Container'
  ;
  return Container;
}(Component), _class2.propTypes = {
  as: CustomPropTypes.elementType,
  children: PropTypes.node,
  textAlign: PropTypes.oneOf(['start', 'center', 'end']),
  /**
  * Controls the maximum width of the Container
  */
  size: PropTypes.oneOf(['auto', 'x-small', 'small', 'medium', 'large', 'fullscreen']),
  /**
  * Set the margin using familiar CSS shorthand
  */
  margin: ThemeablePropTypes.spacing,
  /**
  * Set the padding using familiar CSS shorthand
  */
  padding: ThemeablePropTypes.spacing,
  /**
  * By default the Container's display prop is null, meaning it takes on the
  * display rules of the html element it's rendered as.
  */
  display: PropTypes.oneOf([null, 'block', 'inline']),
  /**
  * Activate a dotted line around the Container to make building your
  * layout easier
  */
  visualDebug: PropTypes.bool,

  /**
  * provides a reference to the underlying html element
  */
  elementRef: PropTypes.func,

  /**
   * Whether or not to render a border around the Container
   */
  withBorder: PropTypes.bool,

  /**
   * Whether or not to render a box shadow for the Container
   */
  withShadow: PropTypes.bool
}, _class2.defaultProps = {
  display: null
}, _temp)) || _class);


export default deprecated('5.4.0', null, changedPackageWarning('ui-container', 'ui-layout') + ' It has also been renamed from [Container] to [View].')(Container);