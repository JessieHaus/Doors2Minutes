'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp; /*
                                          * The MIT License (MIT)
                                          *
                                          * Copyright (c) 2015 - present Instructure, Inc.
                                          *
                                          * Permission is hereby granted, free of charge, to any person obtaining a copy
                                          * of this software and associated documentation files (the "Software"), to deal
                                          * in the Software without restriction, including without limitation the rights
                                          * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                          * copies of the Software, and to permit persons to whom the Software is
                                          * furnished to do so, subject to the following conditions:
                                          *
                                          * The above copyright notice and this permission notice shall be included in all
                                          * copies or substantial portions of the Software.
                                          *
                                          * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                          * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                          * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                          * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                          * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                          * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                          * SOFTWARE.
                                          */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _View = require('@instructure/ui-layout/lib/components/View');

var _View2 = _interopRequireDefault(_View);

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _ThemeablePropTypes = require('@instructure/ui-themeable/lib/utils/ThemeablePropTypes');

var _ThemeablePropTypes2 = _interopRequireDefault(_ThemeablePropTypes);

var _passthroughProps = require('@instructure/ui-utils/lib/react/passthroughProps');

var _supportsObjectFit = require('@instructure/ui-utils/lib/dom/supportsObjectFit');

var _supportsObjectFit2 = _interopRequireDefault(_supportsObjectFit);

var _deprecated = require('@instructure/ui-utils/lib/react/deprecated');

var _deprecated2 = _interopRequireDefault(_deprecated);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*\n   imported from styles.css \n  */\n\n._2FyRyau {\n  /*\n  * reset image styles (initial: all was causing conflicts\n  * w/ View\'s CSS and overriding height/width attrs)\n  */\n  margin: 0;\n  padding: 0;\n  float: none;\n  top: auto;\n  bottom: auto;\n  left: auto; /* stylelint-disable-line property-blacklist */\n  right: auto; /* stylelint-disable-line property-blacklist */\n  line-height: normal;\n  position: static;\n  transform: none;\n  max-height: none;\n  min-height: 0;\n  min-width: 0;\n  max-width: 100%;\n}\n\n[dir="ltr"] ._2FyRyau {\n  float: none;\n}\n\n[dir="rtl"] ._2FyRyau {\n  float: none;\n}\n\n.F-_G7tz {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n._34NNF0s {\n  position: absolute;\n  top: 0;\n  left: 0; /* stylelint-disable-line property-blacklist */\n  width: 100%;\n  height: 100%;\n  transition: all ' + theme.overlayTransitionDuration + ';\n}\n\n._3LwJN6H {\n  display: block; /* when image is contained in overlay, avoid extra space at bottom from inline/line-height */\n}\n\n/* if overlay or filters are updated via props, make the transition look smooth */\n\n._2y_4dlU,\n._34NNF0s {\n  transition: all ' + theme.effectTransitionDuration + ';\n}\n\n._2KHdT5e,\n._2bq8M6K,\n._36-iHd6,\n.wosPkmY {\n  width: 100%;\n  height: 100%;\n}\n\n._2KHdT5e {\n  object-fit: cover;\n}\n\n._2bq8M6K {\n  object-fit: contain;\n}\n\n._2bq8M6K._3LwJN6H {\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n.QQVOtUe {\n  height: inherit;\n}\n\n.wosPkmY {\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.wosPkmY.QQVOtUe {\n    background-size: contain;\n  }\n\n.wosPkmY._36-iHd6 {\n    background-size: cover;\n  }\n\n._3pUaCsp {\n  position: relative;\n  overflow: hidden; /* stops blurred images extending past overlay borders */\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'image': '_2FyRyau',
  'overlayLayout': 'F-_G7tz',
  'overlay': '_34NNF0s',
  'has-overlay': '_3LwJN6H',
  'has-filter': '_2y_4dlU',
  'cover': '_2KHdT5e',
  'contain': '_2bq8M6K',
  'container--has-cover': '_36-iHd6',
  'container--has-background': 'wosPkmY',
  'container--has-contain': 'QQVOtUe',
  'container--has-overlay': '_3pUaCsp'
};


/**
---
category: components
---
**/
var Img = (_dec = (0, _deprecated2.default)('6.0.0', {
  cover: 'constrain'
}), _dec2 = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = _dec2(_class = (_temp = _class2 = function (_Component) {
  _inherits(Img, _Component);

  function Img() {
    _classCallCheck(this, Img);

    return _possibleConstructorReturn(this, (Img.__proto__ || Object.getPrototypeOf(Img)).apply(this, arguments));
  }

  _createClass(Img, [{
    key: 'renderFilter',
    value: function renderFilter() {
      var blur = 'blur(' + this.theme.imageBlurAmount + ')';
      var grayscale = 'grayscale(1)';

      if (this.props.grayscale && this.props.blur) {
        return blur + ' ' + grayscale;
      } else if (this.props.grayscale) {
        return grayscale;
      } else if (this.props.blur) {
        return blur;
      } else {
        return null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          src = _props.src,
          alt = _props.alt,
          margin = _props.margin,
          inline = _props.inline,
          overlay = _props.overlay,
          grayscale = _props.grayscale,
          blur = _props.blur,
          cover = _props.cover,
          constrain = _props.constrain,
          width = _props.width,
          height = _props.height,
          elementRef = _props.elementRef;


      var a11yProps = {
        alt: alt || '',
        role: 'img'
      };

      var imageProps = {
        className: (0, _classnames4.default)((_classnames = {}, _defineProperty(_classnames, styles.image, true), _defineProperty(_classnames, styles['has-overlay'], overlay), _defineProperty(_classnames, styles['has-filter'], blur || grayscale), _defineProperty(_classnames, styles.cover, this.supportsObjectFit && (cover || constrain === 'cover')), _defineProperty(_classnames, styles.contain, this.supportsObjectFit && constrain === 'contain'), _classnames)),
        style: {
          filter: blur || grayscale ? this.renderFilter() : 'none'
        },
        src: src
      };

      var passthroughProps = Object.assign({}, (0, _passthroughProps.omitProps)(this.props, Object.assign({}, Img.propTypes, _View2.default.propTypes)), {
        width: width,
        height: height,
        margin: margin,
        display: inline ? 'inline-block' : 'block',
        elementRef: elementRef

        // if browser does not support ObjectFit CSS, and Img needs cover (deprecated) or constrain,
        // serve up a background-image instead
      });var hasBackground = !this.supportsObjectFit && (cover || constrain);

      if (overlay || hasBackground) {
        var _classnames2;

        // if a background image is rendered we add the a11y props on the container element
        var containerProps = hasBackground ? Object.assign({}, a11yProps, passthroughProps) : passthroughProps;

        return _react2.default.createElement(
          _View2.default,
          Object.assign({}, containerProps, {
            as: 'span',
            className: (0, _classnames4.default)((_classnames2 = {}, _defineProperty(_classnames2, styles['container--has-overlay'], overlay), _defineProperty(_classnames2, styles['container--has-cover'], cover || constrain === 'cover'), _defineProperty(_classnames2, styles['container--has-contain'], constrain === 'contain'), _defineProperty(_classnames2, styles['container--has-background'], hasBackground), _classnames2)),
            style: {
              backgroundImage: hasBackground ? 'url(' + src + ')' : undefined // eslint-disable-line no-undefined
            }
          }),
          !hasBackground && _react2.default.createElement('img', Object.assign({}, imageProps, a11yProps)) // eslint-disable-line jsx-a11y/alt-text
          ,
          overlay && _react2.default.createElement('span', {
            className: styles.overlay,
            style: {
              backgroundColor: overlay.color,
              opacity: overlay.opacity * 0.1,
              mixBlendMode: overlay.blend ? overlay.blend : null
            }
          })
        );
      } else {
        return _react2.default.createElement(_View2.default, Object.assign({}, passthroughProps, imageProps, a11yProps, {
          as: 'img'
        }));
      }
    }
  }, {
    key: 'supportsObjectFit',
    get: function get() {
      return (0, _supportsObjectFit2.default)();
    }
  }]);

  Img.displayName = 'Img'
  ;
  return Img;
}(_react.Component), _class2.propTypes = {
  src: _propTypes2.default.string.isRequired,
  alt: _propTypes2.default.string,
  inline: _propTypes2.default.bool,
  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: _ThemeablePropTypes2.default.spacing,
  /**
  * Valid values for `opacity` are `0` - `10`. Valid values for `blend` are
  * `normal` (default), `multiply`, `screen`, `overlay`, and `color-burn`.
  */
  overlay: _propTypes2.default.shape({
    color: _propTypes2.default.string.isRequired,
    opacity: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]).isRequired,
    blend: _propTypes2.default.oneOf(['normal', 'multiply', 'screen', 'overlay', 'color-burn'])
  }),
  grayscale: _propTypes2.default.bool,
  blur: _propTypes2.default.bool,
  cover: _propTypes2.default.bool,
  constrain: _propTypes2.default.oneOf(['cover', 'contain']),
  elementRef: _propTypes2.default.func
}, _class2.defaultProps = {
  alt: '',
  inline: true,
  grayscale: false,
  blur: false
}, _temp)) || _class) || _class);
exports.default = Img;