'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp; /*
                                   * The MIT License (MIT)
                                   *
                                   * Copyright (c) 2015 - present Instructure, Inc.
                                   *
                                   * Permission is hereby granted, free of charge, to any person obtaining a copy
                                   * of this software and associated documentation files (the "Software"), to deal
                                   * in the Software without restriction, including without limitation the rights
                                   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                   * copies of the Software, and to permit persons to whom the Software is
                                   * furnished to do so, subject to the following conditions:
                                   *
                                   * The above copyright notice and this permission notice shall be included in all
                                   * copies or substantial portions of the Software.
                                   *
                                   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                   * SOFTWARE.
                                   */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ScreenReaderContent = require('@instructure/ui-a11y/lib/components/ScreenReaderContent');

var _ScreenReaderContent2 = _interopRequireDefault(_ScreenReaderContent);

var _View = require('@instructure/ui-layout/lib/components/View');

var _View2 = _interopRequireDefault(_View);

var _passthroughProps = require('@instructure/ui-utils/lib/react/passthroughProps');

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _ThemeablePropTypes = require('@instructure/ui-themeable/lib/utils/ThemeablePropTypes');

var _ThemeablePropTypes2 = _interopRequireDefault(_ThemeablePropTypes);

var _CustomPropTypes = require('@instructure/ui-utils/lib/react/CustomPropTypes');

var _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n/* stylelint-disable selector-max-class, max-nesting-depth, no-descending-specificity */\n\n._33mw37o {\n  display: inline-block;\n  vertical-align: middle;\n  position: relative;\n  overflow: hidden;\n\n  /*\n    Seems like a good idea to reset font-size because\n    the SVG uses ems and might inherit a container\'s\n    font-size\n  */\n  font-size: 1rem;\n  font-family: ' + theme.fontFamily + ';\n  font-weight: ' + theme.fontWeight + ';\n  line-height: ' + theme.lineHeight + ';\n}\n\n._2MN2Dwv {\n  transform: rotate(-90deg);\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0; /* stylelint-disable-line property-blacklist */\n}\n\n._3jTXDEC {\n  transition: all 0.5s;\n  transition-delay: 1s;\n  display: block;\n  position: absolute;\n  transform: translate3d(0, 0, 0);\n  top: 0;\n  left: 0; /* stylelint-disable-line property-blacklist */\n  height: 100%;\n  width: 100%;\n  border-radius: 50%;\n}\n\n._1ZZT6Or {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  text-align: center;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n}\n\n[dir="ltr"] ._1ZZT6Or {\n  text-align: center;\n}\n\n[dir="rtl"] ._1ZZT6Or {\n  text-align: center;\n}\n\n._36hkYco,\n.Zq_t_Cw,\n._1GRaLzA {\n  fill: none;\n}\n\n.Zq_t_Cw {\n  transition: all 0.2s;\n  transform: translate3d(0, 0, 0) scale(1);\n  opacity: 1;\n}\n\n._1GRaLzA {\n  transition: stroke-dashoffset 1s;\n  transform: translate3d(0, 0, 0);\n  stroke: ' + theme.meterColor + ';\n}\n\n.E1JxArC .Zq_t_Cw {\n    stroke: ' + theme.trackColor + ';\n  }\n\n.E1JxArC ._1ZZT6Or {\n    color: ' + theme.color + ';\n  }\n\n._1KJvGax .Zq_t_Cw {\n    stroke: ' + theme.inverseTrackColor + ';\n  }\n\n.E1JxArC.okZPbfk ._36hkYco {\n    display: none;\n  }\n\n._1KJvGax.okZPbfk ._36hkYco {\n    stroke: rgba(0, 0, 0, 0.15);\n  }\n\n.okZPbfk ._1GRaLzA {\n    stroke: ' + theme.doneMeterColor + ';\n  }\n\n._1ANQf9_ {\n  width: ' + theme.xSmallSize + ';\n  height: ' + theme.xSmallSize + ';\n}\n\n._1ANQf9_ ._2MN2Dwv {\n    width: ' + theme.xSmallSize + ';\n    height: ' + theme.xSmallSize + ';\n  }\n\n._1ANQf9_ ._1ZZT6Or {\n    padding: 0.5rem;\n  }\n\n._1ANQf9_ ._36hkYco {\n    stroke-width: 0.5em;\n  }\n\n._1ANQf9_ .Zq_t_Cw {\n    transform-origin: ' + theme.xSmallTransform + ' ' + theme.xSmallTransform + ';\n  }\n\n._1ANQf9_ .Zq_t_Cw,\n  ._1ANQf9_ ._1GRaLzA {\n    stroke-width: 0.185em;\n  }\n\n._1ANQf9_ ._1GRaLzA {\n    stroke-dasharray: ' + theme.xSmallCircumference + ';\n  }\n\n._2z4Tiay {\n  width: ' + theme.smallSize + ';\n  height: ' + theme.smallSize + ';\n}\n\n._2z4Tiay ._2MN2Dwv {\n    width: ' + theme.smallSize + ';\n    height: ' + theme.smallSize + ';\n  }\n\n._2z4Tiay ._36hkYco {\n    stroke-width: 1em;\n  }\n\n._2z4Tiay .Zq_t_Cw {\n    transform-origin: ' + theme.smallTransform + ' ' + theme.smallTransform + ';\n  }\n\n._2z4Tiay .Zq_t_Cw,\n  ._2z4Tiay ._1GRaLzA {\n    stroke-width: 0.5em;\n  }\n\n._2z4Tiay ._1GRaLzA {\n    stroke-dasharray: ' + theme.smallCircumference + ';\n  }\n\n.DjrYcmy {\n  width: ' + theme.mediumSize + ';\n  height: ' + theme.mediumSize + ';\n}\n\n.DjrYcmy ._2MN2Dwv {\n    width: ' + theme.mediumSize + ';\n    height: ' + theme.mediumSize + ';\n  }\n\n.DjrYcmy ._36hkYco {\n    stroke-width: 1.125em;\n  }\n\n.DjrYcmy .Zq_t_Cw {\n    transform-origin: ' + theme.mediumTransform + ' ' + theme.mediumTransform + ';\n  }\n\n.DjrYcmy .Zq_t_Cw,\n  .DjrYcmy ._1GRaLzA {\n    stroke-width: 0.625em;\n  }\n\n.DjrYcmy ._1GRaLzA {\n    stroke-dasharray: ' + theme.mediumCircumference + ';\n  }\n\n._38E2VAU {\n  width: ' + theme.largeSize + ';\n  height: ' + theme.largeSize + ';\n}\n\n._38E2VAU ._2MN2Dwv {\n    width: ' + theme.largeSize + ';\n    height: ' + theme.largeSize + ';\n  }\n\n._38E2VAU ._36hkYco {\n    stroke-width: 1.375em;\n  }\n\n._38E2VAU .Zq_t_Cw {\n    transform-origin: ' + theme.largeTransform + ' ' + theme.largeTransform + ';\n  }\n\n._38E2VAU .Zq_t_Cw,\n  ._38E2VAU ._1GRaLzA {\n    stroke-width: 0.875em;\n  }\n\n._38E2VAU ._1GRaLzA {\n    stroke-dasharray: ' + theme.largeCircumference + ';\n  }\n\n/*\n  The animateOnMount class is removed via a state\n  change in index.js, triggering CSS transitions and animations\n  that make the track, meter and output text animate in\n  (only used if the animateOnMount prop is true)\n*/\n\n._29UNC4X {\n  /* stylelint-enable declaration-no-important */\n}\n\n._29UNC4X .Zq_t_Cw {\n    opacity: 0.01;\n    transform: translate3d(0, 0, 0) scale(0.1);\n  }\n\n._29UNC4X ._3jTXDEC {\n    opacity: 0;\n    transform: translate3d(0, 35%, 0);\n  }\n\n._29UNC4X ._1GRaLzA {\n    opacity: 0;\n  }\n\n/*\n     Using !important here to guarantee that the bars will start showing\n     0 if the animateOnMount prop is set\n  */\n\n._29UNC4X._1ANQf9_ ._1GRaLzA {\n    stroke-dashoffset: ' + theme.xSmallCircumference + ' !important;\n  }\n\n/* stylelint-disable declaration-no-important */\n\n._29UNC4X._2z4Tiay ._1GRaLzA {\n    stroke-dashoffset: ' + theme.smallCircumference + ' !important;\n  }\n\n._29UNC4X.DjrYcmy ._1GRaLzA {\n    stroke-dashoffset: ' + theme.mediumCircumference + ' !important;\n  }\n\n._29UNC4X._38E2VAU ._1GRaLzA {\n    stroke-dashoffset: ' + theme.largeCircumference + ' !important;\n  }\n\n/* stylelint-enable selector-max-class, max-nesting-depth, no-descending-specificity */\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_33mw37o',
  'circle': '_2MN2Dwv',
  'center': '_3jTXDEC',
  'value': '_1ZZT6Or',
  'shadow': '_36hkYco',
  'track': 'Zq_t_Cw',
  'meter': '_1GRaLzA',
  'default': 'E1JxArC',
  'inverse': '_1KJvGax',
  'done': 'okZPbfk',
  'x-small': '_1ANQf9_',
  'small': '_2z4Tiay',
  'medium': 'DjrYcmy',
  'large': '_38E2VAU',
  'animateOnMount': '_29UNC4X'
};


/**
---
parent: Progress
---
**/
var ProgressCircle = (_dec = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(ProgressCircle, _Component);

  function ProgressCircle(props) {
    _classCallCheck(this, ProgressCircle);

    var _this = _possibleConstructorReturn(this, (ProgressCircle.__proto__ || Object.getPrototypeOf(ProgressCircle)).call(this));

    _this._timeouts = [];


    _this.state = {
      animateOnMount: props.animateOnMount
    };
    return _this;
  }

  _createClass(ProgressCircle, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      if (this.state.animateOnMount) {
        this._timeouts.push(setTimeout(function () {
          _this2.setState({
            animateOnMount: false
          });
        }, 500));
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._timeouts.forEach(function (timeout) {
        return clearTimeout(timeout);
      });
    }
  }, {
    key: 'circumference',
    value: function circumference() {
      var camelSize = this.props.size === 'x-small' ? 'xSmall' : this.props.size;
      // get the circumference of the meter circle
      return parseFloat(this.theme[camelSize + 'Circumference']);
    }
  }, {
    key: 'radius',
    value: function radius() {
      var camelSize = this.props.size === 'x-small' ? 'xSmall' : this.props.size;
      return this.theme[camelSize + 'Radius'];
    }
  }, {
    key: 'dashOffset',
    value: function dashOffset() {
      var _props = this.props,
          valueNow = _props.valueNow,
          valueMax = _props.valueMax;

      // send the stroke-dashoffset to the meter circle, checking
      // to make sure current value doesn't exceed max value

      if (valueNow < valueMax) {
        var circumference = this.circumference();
        // figure out how much offset to give the stroke to show the % complete
        return circumference - valueNow / valueMax * circumference;
      } else {
        return 0;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes;

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.props.size], true), _defineProperty(_classes, styles[this.props.variant], true), _defineProperty(_classes, styles.animateOnMount, this.state.animateOnMount), _defineProperty(_classes, styles.done, this.props.successColor && this.props.valueNow / this.props.valueMax >= 1), _classes);

      var _props2 = this.props,
          formatDisplayedValue = _props2.formatDisplayedValue,
          formatValueText = _props2.formatValueText,
          valueNow = _props2.valueNow,
          valueMax = _props2.valueMax,
          label = _props2.label;


      var valueText = formatValueText(valueNow, valueMax);

      // consolidating the label and aria-valuetext to put in aria-label because
      // NVDA does not read aria-valuetext: https://github.com/nvaccess/nvda/issues/913
      // But leaving aria-valuetext because JAWS ignores aria-label
      var labelAndValueText = label + ' ' + valueText;

      var value = typeof formatDisplayedValue === 'function' && formatDisplayedValue(valueNow, valueMax);

      var style = this.state.animateOnMount ? null : {
        strokeDashoffset: this.dashOffset() + 'em'
      };

      var radius = this.radius();

      return _react2.default.createElement(
        _View2.default,
        Object.assign({}, (0, _passthroughProps.omitProps)(this.props, Object.assign({}, ProgressCircle.propTypes, _View2.default.propTypes)), {
          as: this.props.as,
          elementRef: this.props.elementRef,
          className: (0, _classnames2.default)(classes),
          margin: this.props.margin
        }),
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          _react2.default.createElement('progress', {
            max: valueMax,
            value: valueNow,
            'aria-valuetext': valueText,
            'aria-valuenow': valueNow,
            'aria-valuemax': valueMax,
            'aria-label': labelAndValueText
          })
        ),
        value && _react2.default.createElement(
          'span',
          { className: styles.center, 'aria-hidden': 'true' },
          _react2.default.createElement(
            'span',
            { className: styles.value },
            value
          )
        ),
        _react2.default.createElement(
          'svg',
          {
            className: styles.circle,
            role: 'presentation',
            focusable: 'false'
          },
          _react2.default.createElement('circle', {
            className: styles.shadow,
            role: 'presentation',
            cx: '50%',
            cy: '50%',
            r: radius
          }),
          _react2.default.createElement('circle', {
            className: styles.track,
            role: 'presentation',
            cx: '50%',
            cy: '50%',
            r: radius
          }),
          _react2.default.createElement('circle', {
            className: styles.meter,
            role: 'presentation',
            style: style,
            cx: '50%',
            cy: '50%',
            r: radius
          })
        )
      );
    }
  }]);

  ProgressCircle.displayName = 'ProgressCircle'
  ;
  return ProgressCircle;
}(_react.Component), _class2.propTypes = {
  /**
  * A label is required for accessibility
  */
  label: _propTypes2.default.string.isRequired,
  /**
  * Different-sized progress bars and circles
  */
  size: _propTypes2.default.oneOf(['x-small', 'small', 'medium', 'large']),
  /**
  * Maximum value (defaults to 100)
  */
  valueMax: _propTypes2.default.number,
  /**
  * Receives the progress of the event
  */
  valueNow: _propTypes2.default.number,
  /**
  * A function that returns the current value formatted for screen readers
  */
  formatValueText: _propTypes2.default.func,
  /**
  * A function to format the displayed value. If null the value will not display.
  */
  formatDisplayedValue: _propTypes2.default.func,
  /**
  * Animate the progress meter to the current value when the component
  * has mounted
  */
  animateOnMount: _propTypes2.default.bool,
  /**
  * The bar changes to your theme's success color when complete
  */
  successColor: _propTypes2.default.bool,
  /**
  * Choose either a progress bar or circle. The `-inverse` variants are for
  * when you need the Progress component to appear on inverse backgrounds
  */
  variant: _propTypes2.default.oneOf(['default', 'inverse']),
  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: _ThemeablePropTypes2.default.spacing,
  elementRef: _propTypes2.default.func,
  as: _CustomPropTypes2.default.elementType
}, _class2.defaultProps = {
  formatValueText: function formatValueText(valueNow, valueMax) {
    return valueNow + ' / ' + valueMax;
  },
  size: 'medium',
  valueMax: 100,
  valueNow: 0,
  variant: 'default',
  animateOnMount: false,
  successColor: true,
  as: 'div'
}, _temp)) || _class);
exports.default = ProgressCircle;