var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import SVGIcon from '@instructure/ui-svg-images/lib/components/SVGIcon';

var IconCollapse = (_temp = _class = function (_Component) {
  _inherits(IconCollapse, _Component);

  function IconCollapse() {
    _classCallCheck(this, IconCollapse);

    return _possibleConstructorReturn(this, (IconCollapse.__proto__ || Object.getPrototypeOf(IconCollapse)).apply(this, arguments));
  }

  _createClass(IconCollapse, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        SVGIcon,
        Object.assign({}, this.props, {
          name: 'IconCollapse',
          viewBox: '0 0 1920 1920'

        }),
        React.createElement('path', { d: 'M1750.588 113C1843.991 113 1920 189.01 1920 282.412v1185.882h-112.941V282.412c0-31.06-25.412-56.47-56.47-56.47H169.411c-31.06 0-56.47 25.41-56.47 56.47v1185.882H0V282.412C0 189.009 76.01 113 169.412 113h1581.176zM903.53 564.765h112.942v654.268l242.371-242.485 79.963 79.963L960 1435.202l-378.805-378.691 79.963-79.963 242.371 242.485V564.765zM0 1807.118v-112.942h1920v112.942H0z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconCollapse.displayName = 'IconCollapse'
  ;
  return IconCollapse;
}(Component), _class.glyphName = 'collapse', _class.variant = 'Line', _class.propTypes = Object.assign({}, SVGIcon.propTypes), _temp);
export { IconCollapse as default };