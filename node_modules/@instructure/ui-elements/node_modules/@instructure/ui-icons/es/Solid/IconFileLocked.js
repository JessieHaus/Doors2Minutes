var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import SVGIcon from '@instructure/ui-svg-images/lib/components/SVGIcon';

var IconFileLocked = (_temp = _class = function (_Component) {
  _inherits(IconFileLocked, _Component);

  function IconFileLocked() {
    _classCallCheck(this, IconFileLocked);

    return _possibleConstructorReturn(this, (IconFileLocked.__proto__ || Object.getPrototypeOf(IconFileLocked)).apply(this, arguments));
  }

  _createClass(IconFileLocked, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        SVGIcon,
        Object.assign({}, this.props, {
          name: 'IconFileLocked',
          viewBox: '0 0 1920 1920'

        }),
        React.createElement('path', { d: 'M225.882 507.765H1920v504.056c0 23.83-30.833 30.72-42.353 9.939-58.052-104.245-169.299-175.172-296.47-175.172-186.353 0-338.824 152.47-338.824 338.824h-67.765c-24.96 0-45.176 20.216-45.176 45.176v463.06c0 19.2 2.259 38.4 5.647 56.47H169.412C75.896 1750.118 0 1674.334 0 1580.706V56h764.612l225.882 338.824H225.882v112.94zm1468.236 790.588h-225.883v-112.941c0-62.23 50.71-112.941 112.941-112.941s112.942 50.71 112.942 112.94v112.942zm112.94-112.941c0-124.574-101.194-225.883-225.882-225.883-124.687 0-225.882 101.309-225.882 225.883v112.94h-112.941v395.295c0 93.402 76.01 169.412 169.412 169.412h338.823c93.403 0 169.412-76.01 169.412-169.412v-395.294h-112.941v-112.941z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconFileLocked.displayName = 'IconFileLocked'
  ;
  return IconFileLocked;
}(Component), _class.glyphName = 'file-locked', _class.variant = 'Solid', _class.propTypes = Object.assign({}, SVGIcon.propTypes), _temp);
export { IconFileLocked as default };