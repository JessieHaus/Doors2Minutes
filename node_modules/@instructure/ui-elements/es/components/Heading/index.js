var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';

import View from '@instructure/ui-layout/lib/components/View';

import themeable from '@instructure/ui-themeable';
import CustomPropTypes from '@instructure/ui-utils/lib/react/CustomPropTypes';
import ThemeablePropTypes from '@instructure/ui-themeable/lib/utils/ThemeablePropTypes';
import { deprecatePropValues } from '@instructure/ui-utils/lib/react/deprecated';
import getElementType from '@instructure/ui-utils/lib/react/getElementType';
import { omitProps } from '@instructure/ui-utils/lib/react/passthroughProps';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._2mOFUtS {\n  font-family: ' + theme.fontFamily + ';\n  line-height: ' + theme.lineHeight + ';\n  text-rendering: optimizeLegibility;\n  margin: 0;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.ytqj7_N {\n  font-size: ' + theme.h1FontSize + ';\n  font-weight: ' + theme.h1FontWeight + ';\n}\n\n._3v-w-zU {\n  font-size: ' + theme.h2FontSize + ';\n  font-weight: ' + theme.h2FontWeight + ';\n}\n\n._1YKb2wi {\n  font-size: ' + theme.h3FontSize + ';\n  font-weight: ' + theme.h3FontWeight + ';\n}\n\n.T7GyxBu {\n  font-size: ' + theme.h4FontSize + ';\n  font-weight: ' + theme.h4FontWeight + ';\n}\n\n._11oaCBr {\n  font-size: ' + theme.h5FontSize + ';\n  font-weight: ' + theme.h5FontWeight + ';\n}\n\n.VLuFakG {\n  padding-top: ' + theme.borderPadding + ';\n  border-top: ' + theme.borderWidth + ' ' + theme.borderStyle + ' ' + theme.borderColor + ';\n}\n\n.HALnRVA {\n  padding-bottom: ' + theme.borderPadding + ';\n  border-bottom: ' + theme.borderWidth + ' ' + theme.borderStyle + ' ' + theme.borderColor + ';\n}\n\n._3D7QIUY {\n  color: inherit;\n}\n\n._2c444mN {\n  color: ' + theme.primaryColor + ';\n}\n\n._2alA_sd {\n  color: ' + theme.secondaryColor + ';\n}\n\n._2R7bfvh {\n  color: ' + theme.primaryInverseColor + ';\n}\n\n.TXV1B6n {\n  color: ' + theme.secondaryInverseColor + ';\n}\n\n._1FesP7x {\n  color: ' + theme.successColor + ';\n}\n\n.VPcorTK {\n  color: ' + theme.warningColor + ';\n}\n\n.VpxDGd7 {\n  color: ' + theme.brandColor + ';\n}\n\n._2kWfZFs {\n  color: ' + theme.errorColor + ';\n}\n\n.R79-hrv {\n  margin: 0;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n}\n\n._3-U0OWa {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  /* in case element is span or other inline element */\n  display: block;\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_2mOFUtS',
  'h1': 'ytqj7_N',
  'h2': '_3v-w-zU',
  'h3': '_1YKb2wi',
  'h4': 'T7GyxBu',
  'h5': '_11oaCBr',
  'border-top': 'VLuFakG',
  'border-bottom': 'HALnRVA',
  'color-inherit': '_3D7QIUY',
  'color-primary': '_2c444mN',
  'color-secondary': '_2alA_sd',
  'color-primary-inverse': '_2R7bfvh',
  'color-secondary-inverse': 'TXV1B6n',
  'color-success': '_1FesP7x',
  'color-warning': 'VPcorTK',
  'color-brand': 'VpxDGd7',
  'color-error': '_2kWfZFs',
  'reset': 'R79-hrv',
  'ellipsis': '_3-U0OWa'
};

import theme from './theme';

/**
---
category: components/typography
---
**/

var Heading = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Heading, _Component);

  function Heading() {
    _classCallCheck(this, Heading);

    return _possibleConstructorReturn(this, (Heading.__proto__ || Object.getPrototypeOf(Heading)).apply(this, arguments));
  }

  _createClass(Heading, [{
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          border = _props.border,
          children = _props.children,
          color = _props.color,
          level = _props.level,
          ellipsis = _props.ellipsis,
          margin = _props.margin,
          elementRef = _props.elementRef;


      var ElementType = getElementType(Heading, this.props, function () {
        if (level === 'reset') {
          return 'span';
        } else {
          return level;
        }
      });

      return React.createElement(
        View,
        Object.assign({}, omitProps(this.props, Object.assign({}, Heading.propTypes, View.propTypes)), {
          className: classnames((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles[level], true), _defineProperty(_classnames, styles['color-' + color], color), _defineProperty(_classnames, styles['border-' + border], border !== 'none'), _defineProperty(_classnames, styles.ellipsis, ellipsis), _classnames)),
          as: ElementType,
          margin: margin,
          elementRef: elementRef
        }),
        children
      );
    }
  }]);

  Heading.displayName = 'Heading'
  ;
  return Heading;
}(Component), _class2.propTypes = {
  border: PropTypes.oneOf(['none', 'top', 'bottom']),
  children: PropTypes.node.isRequired,
  color: deprecatePropValues(PropTypes.oneOf(['primary', 'secondary', 'primary-inverse', 'secondary-inverse', 'inherit']), ['success', 'warning', 'error', 'brand']),
  level: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'reset']),
  /**
  * the element type to render as (defaults to the level)
  */
  as: CustomPropTypes.elementType,
  ellipsis: PropTypes.bool,
  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  elementRef: PropTypes.func
}, _class2.defaultProps = {
  border: 'none',
  color: 'inherit',
  level: 'h2',
  ellipsis: false
}, _temp)) || _class);
export { Heading as default };