var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import IconStar from '@instructure/ui-icons/lib/Solid/IconStar';
import IconStarLight from '@instructure/ui-icons/lib/Solid/IconStarLight';
import classnames from 'classnames';

import themeable from '@instructure/ui-themeable';
import requestAnimationFrame from '@instructure/ui-utils/lib/dom/requestAnimationFrame';

import Transition from '@instructure/ui-motion/lib/components/Transition';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n._1SnjpoI {\n  display: inline-block;\n  vertical-align: bottom;\n  margin: 0 ' + theme.iconMargin + ';\n  line-height: 1;\n}\n\n  ._1SnjpoI:first-of-type {\n    margin-left: 0; /* stylelint-disable-line property-blacklist */\n  }\n\n  ._1SnjpoI:last-of-type {\n    margin-right: 0; /* stylelint-disable-line property-blacklist */\n  }\n\n._2Gr7SR3 {\n  display: inline-block;\n  vertical-align: bottom;\n}\n\n._1klYxff ._2Gr7SR3 {\n  color: ' + theme.iconFilledColor + ';\n}\n\n._1gqlu2W ._2Gr7SR3 {\n  color: ' + theme.iconEmptyColor + ';\n}\n\n._2BmKsAQ ._2Gr7SR3 {\n    font-size: ' + theme.smallIconFontSize + ';\n  }\n\n._3kBlcQ7 ._2Gr7SR3 {\n    font-size: ' + theme.mediumIconFontSize + ';\n  }\n\n.bBYwYXh ._2Gr7SR3 {\n    font-size: ' + theme.largeIconFontSize + ';\n  }\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_1SnjpoI',
  'icon': '_2Gr7SR3',
  'filled': '_1klYxff',
  'empty': '_1gqlu2W',
  'small': '_2BmKsAQ',
  'medium': '_3kBlcQ7',
  'large': 'bBYwYXh'
};

import theme from './theme';

/**
---
parent: Rating
---
**/
var RatingIcon = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(RatingIcon, _Component);

  function RatingIcon(props) {
    _classCallCheck(this, RatingIcon);

    var _this = _possibleConstructorReturn(this, (RatingIcon.__proto__ || Object.getPrototypeOf(RatingIcon)).call(this));

    _this._timeouts = [];

    _this.fill = function () {
      _this._animation = requestAnimationFrame(function () {
        _this.setState({
          filled: true
        });
      });
    };

    _this.handleTransitionEnter = function () {
      _this.applyTheme();
    };

    _this.state = {
      filled: props.filled && !props.animateFill
    };
    return _this;
  }

  _createClass(RatingIcon, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.animateFill) {
        this._timeouts.push(setTimeout(this.fill, this.props.animationDelay));
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (this.props.animateFill && this.props.filled && this.props.filled !== prevProps.filled) {
        this.fill();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._animation && this._animation.cancel();
      this._timeouts.forEach(function (timeout) {
        return clearTimeout(timeout);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes;

      var _props = this.props,
          size = _props.size,
          animateFill = _props.animateFill;


      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[size], true), _defineProperty(_classes, styles.filled, this.state.filled), _defineProperty(_classes, styles.empty, !this.state.filled), _classes);

      var Icon = this.state.filled ? IconStar : IconStarLight;

      return React.createElement(
        'span',
        { className: classnames(classes) },
        React.createElement(
          'span',
          null,
          this.state.filled && animateFill ? React.createElement(
            Transition,
            {
              'in': true,
              transitionOnMount: true,
              type: 'scale',
              onEnter: this.handleTransitionEnter
            },
            React.createElement(Icon, { className: styles.icon })
          ) : React.createElement(Icon, { className: styles.icon })
        )
      );
    }
  }]);

  RatingIcon.displayName = 'RatingIcon'
  ;
  return RatingIcon;
}(Component), _class2.propTypes = {
  animationDelay: PropTypes.number,
  animateFill: PropTypes.bool,
  filled: PropTypes.bool,
  size: PropTypes.oneOf(['small', 'medium', 'large'])
}, _class2.defaultProps = {
  animationDelay: 200,
  animateFill: false,
  filled: false,
  size: 'medium'
}, _temp)) || _class);
export { RatingIcon as default };