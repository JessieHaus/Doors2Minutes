var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';

import View from '@instructure/ui-layout/lib/components/View';

import { omitProps } from '@instructure/ui-utils/lib/react/passthroughProps';
import themeable from '@instructure/ui-themeable';
import ThemeablePropTypes from '@instructure/ui-themeable/lib/utils/ThemeablePropTypes';
import CustomPropTypes from '@instructure/ui-utils/lib/react/CustomPropTypes';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n/* stylelint-disable selector-max-class, max-nesting-depth, no-descending-specificity */\n\n._2fCga3l {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  font-family: ' + theme.fontFamily + ';\n  font-weight: ' + theme.fontWeight + ';\n  line-height: ' + theme.lineHeight + ';\n  font-size: ' + theme.fontSize + ';\n}\n\n.V_ZYOnN[value] {\n  box-sizing: border-box;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  width: auto;\n  flex: 1;\n  border: none;\n}\n\n.V_ZYOnN[value]::-webkit-progress-value {\n    background: linear-gradient(to right, ' + theme.meterColorStart + ' 0%, ' + theme.meterColorEnd + ' 100%);\n  }\n\n.V_ZYOnN[value]::-moz-progress-bar {\n    background: linear-gradient(to right, ' + theme.meterColorStart + ' 0%, ' + theme.meterColorEnd + ' 100%);\n  }\n\n.V_ZYOnN[value]::-ms-fill {\n    border: none;\n    background: linear-gradient(to right, ' + theme.meterColorStart + ' 0%, ' + theme.meterColorEnd + ' 100%);\n  }\n\n._3W_wXRN {\n  line-height: 1;\n  box-sizing: border-box;\n  -webkit-padding-start: ' + theme.valuePadding + ';\n          padding-inline-start: ' + theme.valuePadding + ';\n  flex: 0 0 5.625rem;\n}\n\n[dir="ltr"] ._3W_wXRN {\n  padding-left: ' + theme.valuePadding + ';\n}\n\n[dir="rtl"] ._3W_wXRN {\n  padding-right: ' + theme.valuePadding + ';\n}\n\n.pwfHHm_ {\n  -webkit-margin-start: 0.1875rem;\n          margin-inline-start: 0.1875rem;\n  -webkit-margin-end: 0.1875rem;\n          margin-inline-end: 0.1875rem;\n}\n\n[dir="ltr"] .pwfHHm_ {\n  margin-left: 0.1875rem;\n  margin-right: 0.1875rem;\n}\n\n[dir="rtl"] .pwfHHm_ {\n  margin-right: 0.1875rem;\n  margin-left: 0.1875rem;\n}\n\n._3zBTnMy .V_ZYOnN[value] {\n    height: ' + theme.xSmallHeight + ';\n  }\n\n._3zBTnMy ._3W_wXRN {\n    font-size: ' + theme.xSmallValueFontSize + ';\n  }\n\n.z9C60Ve .V_ZYOnN[value] {\n    /* product design wants = 18px */\n    height: 1.125rem;\n  }\n\n.z9C60Ve ._3W_wXRN {\n    font-size: ' + theme.smallValueFontSize + ';\n  }\n\n.HzOdG3j .V_ZYOnN[value] {\n    height: ' + theme.mediumHeight + ';\n  }\n\n.HzOdG3j ._3W_wXRN {\n    font-size: ' + theme.mediumValueFontSize + ';\n  }\n\n._17-7pXX .V_ZYOnN[value] {\n    height: ' + theme.largeHeight + ';\n  }\n\n._17-7pXX ._3W_wXRN {\n    font-size: ' + theme.largeValueFontSize + ';\n  }\n\n._2NVU0Fr .V_ZYOnN[value] {\n    background-color: ' + theme.trackColor + ';\n  }\n\n._2NVU0Fr .V_ZYOnN[value]::-webkit-progress-bar {\n      background-color: ' + theme.trackColor + ';\n    }\n\n._2NVU0Fr ._3W_wXRN {\n    color: ' + theme.color + ';\n  }\n\n._2CKUp_n .V_ZYOnN[value] {\n    background-color: ' + theme.inverseTrackColor + ';\n  }\n\n._2CKUp_n .V_ZYOnN[value]::-webkit-progress-bar {\n      background-color: ' + theme.inverseTrackColor + ';\n    }\n\n._2CKUp_n ._3W_wXRN {\n    color: ' + theme.inverseColor + ';\n  }\n\n._3Ke_Q8X .V_ZYOnN[value]::-webkit-progress-value {\n    background: linear-gradient(to right, ' + theme.doneMeterColorStart + ' 0%, ' + theme.doneMeterColorEnd + ' 100%);\n  }\n\n._3Ke_Q8X .V_ZYOnN[value]::-moz-progress-bar {\n    background: linear-gradient(to right, ' + theme.doneMeterColorStart + ' 0%, ' + theme.doneMeterColorEnd + ' 100%);\n  }\n\n._3Ke_Q8X .V_ZYOnN[value]::-ms-fill {\n    background: linear-gradient(to right, ' + theme.doneMeterColorStart + ' 0%, ' + theme.doneMeterColorEnd + ' 100%);\n  }\n\n/* stylelint-enable selector-max-class, max-nesting-depth, no-descending-specificity */\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': '_2fCga3l',
  'bar': 'V_ZYOnN',
  'value': '_3W_wXRN',
  'slash': 'pwfHHm_',
  'x-small': '_3zBTnMy',
  'small': 'z9C60Ve',
  'medium': 'HzOdG3j',
  'large': '_17-7pXX',
  'default': '_2NVU0Fr',
  'inverse': '_2CKUp_n',
  'done': '_3Ke_Q8X'
};

import theme from './theme';

/**
---
parent: Progress
---
**/
var ProgressBar = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(ProgressBar, _Component);

  function ProgressBar() {
    _classCallCheck(this, ProgressBar);

    return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));
  }

  _createClass(ProgressBar, [{
    key: 'render',
    value: function render() {
      var _classes;

      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles[this.props.size], true), _defineProperty(_classes, styles[this.props.variant], true), _defineProperty(_classes, styles.done, this.props.successColor && this.props.valueNow / this.props.valueMax >= 1), _classes);

      var _props = this.props,
          formatDisplayedValue = _props.formatDisplayedValue,
          formatValueText = _props.formatValueText,
          valueNow = _props.valueNow,
          valueMax = _props.valueMax,
          label = _props.label;


      var valueText = formatValueText(valueNow, valueMax);
      var value = typeof formatDisplayedValue === 'function' && formatDisplayedValue(valueNow, valueMax);

      /* eslint-disable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
      return React.createElement(
        View,
        Object.assign({}, omitProps(this.props, Object.assign({}, ProgressBar.propTypes, View.propTypes), ['animateOnMount']), {
          as: this.props.as,
          className: classnames(classes),
          margin: this.props.margin,
          elementRef: this.props.elementRef
        }),
        React.createElement('progress', {
          className: styles.bar,
          max: valueMax,
          value: valueNow,
          role: 'progressbar',
          'aria-valuetext': valueText,
          'aria-valuenow': valueNow,
          'aria-valuemax': valueMax,
          'aria-label': label
        }),
        value && React.createElement(
          'span',
          { className: styles.value, 'aria-hidden': 'true' },
          value
        )
      );
      /* eslint-enable jsx-a11y/no-redundant-roles, jsx-a11y/no-noninteractive-element-to-interactive-role */
    }
  }]);

  ProgressBar.displayName = 'ProgressBar'
  ;
  return ProgressBar;
}(Component), _class2.propTypes = {
  /**
  * A label is required for accessibility
  */
  label: PropTypes.string.isRequired,
  /**
  * Different-sized progress bars and circles
  */
  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),
  /**
  * Maximum value (defaults to 100)
  */
  valueMax: PropTypes.number,
  /**
  * Receives the progress of the event
  */
  valueNow: PropTypes.number,
  /**
  * A function that returns the current value formatted for screen readers
  */
  formatValueText: PropTypes.func,
  /**
  * A function to format the displayed value. If null the value will not display.
  */
  formatDisplayedValue: PropTypes.func,
  /**
  * The bar changes to your theme's success color when complete
  */
  successColor: PropTypes.bool,
  /**
  * Choose either a progress bar or circle. The `-inverse` variants are for
  * when you need the Progress component to appear on inverse backgrounds
  */
  variant: PropTypes.oneOf(['default', 'inverse']),
  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  elementRef: PropTypes.func,
  as: CustomPropTypes.elementType
}, _class2.defaultProps = {
  formatValueText: function formatValueText(valueNow, valueMax) {
    return valueNow + ' / ' + valueMax;
  },
  size: 'medium',
  valueMax: 100,
  valueNow: 0,
  variant: 'default',
  successColor: true,
  as: 'div'
}, _temp)) || _class);
export { ProgressBar as default };