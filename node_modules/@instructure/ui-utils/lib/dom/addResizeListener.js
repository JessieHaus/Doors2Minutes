'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addResizeListener;

var _findDOMNode = require('./findDOMNode');

var _findDOMNode2 = _interopRequireDefault(_findDOMNode);

var _getBoundingClientRect = require('./getBoundingClientRect');

var _getBoundingClientRect2 = _interopRequireDefault(_getBoundingClientRect);

var _requestAnimationFrame = require('./requestAnimationFrame');

var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: replace with https://wicg.github.io/ResizeObserver/ when it's supported

/**
 * ---
 * category: utilities/DOM
 * ---
 * @module
 * Adds a listener to an element and calls a specified handler
 * function whenever the size changes
 *
 * @param {ReactComponent|DomNode} el - component or DOM node
 * @param {function} handler - function to run when resize occurs
 * @returns {function} remove - cancel the listener and no longer execute the handler function
 */
function addResizeListener(el, handler) {
  var node = (0, _findDOMNode2.default)(el);

  var _getBoundingClientRec = (0, _getBoundingClientRect2.default)(node),
      width = _getBoundingClientRec.width;

  var cancelled = false;
  var raf = void 0;

  var checkDimensions = function checkDimensions() {
    if (cancelled) {
      return;
    }

    var boundingRect = (0, _getBoundingClientRect2.default)(node);
    var size = {
      width: boundingRect.width,
      height: boundingRect.height
    };

    if (size.width !== width && typeof handler === 'function') {
      handler(size);
    }

    width = size.width;

    raf = (0, _requestAnimationFrame2.default)(checkDimensions);
  };

  checkDimensions();

  return {
    remove: function remove() {
      cancelled = true;
      raf.cancel();
    }
  };
} /*
   * The MIT License (MIT)
   *
   * Copyright (c) 2015 - present Instructure, Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */