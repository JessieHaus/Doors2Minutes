'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _sheet = require('glamor/lib/sheet');

var _canUseDOM = require('@instructure/ui-utils/lib/dom/canUseDOM');

var _canUseDOM2 = _interopRequireDefault(_canUseDOM);

var _transformCss = require('./utils/transformCss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = Boolean(process.env.DEBUG) || process.env.NODE_ENV === 'development'; /*
                                                                                   * The MIT License (MIT)
                                                                                   *
                                                                                   * Copyright (c) 2015 - present Instructure, Inc.
                                                                                   *
                                                                                   * Permission is hereby granted, free of charge, to any person obtaining a copy
                                                                                   * of this software and associated documentation files (the "Software"), to deal
                                                                                   * in the Software without restriction, including without limitation the rights
                                                                                   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                                                                   * copies of the Software, and to permit persons to whom the Software is
                                                                                   * furnished to do so, subject to the following conditions:
                                                                                   *
                                                                                   * The above copyright notice and this permission notice shall be included in all
                                                                                   * copies or substantial portions of the Software.
                                                                                   *
                                                                                   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                                                                   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                                                                   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                                                                   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                                                                   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                                                                   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                                                                   * SOFTWARE.
                                                                                   */

var STYLES = {};
var THEMEABLE_STYLESHEET = void 0;

/**
* ---
* category: utilities/themes
* ---
* A utility for the [themeable](#themeable) component HOC that wraps a
* [Glamor StyleSheet](https://github.com/threepointone/glamor/blob/master/src/sheet.js)
* @module StyleSheet
*/
exports.default = {
  /**
  * Inject the `cssText` into the document
  * @param {String} id - a unique id for the set of styles
  * @param {String} cssText - some CSS to inject into the document
  */
  mount: function mount(id, cssText) {
    if (!STYLES[id]) {
      STYLES[id] = {
        cssText: cssText,
        rules: insert((0, _transformCss.toRules)(cssText))
      };
    }
  },


  /**
  * Check if the stylesheet for the given `id` is already mounted
  * @param {String} id - a unique id for the set of styles
  */
  mounted: function mounted(id) {
    return id in STYLES;
  }
};


function insert(rules) {
  var sheet = inject();

  var inserted = [];
  rules.forEach(function (rule) {
    if (rule) {
      inserted.push(sheet.insert(rule));
    }
  });
}

function inject() {
  var sheet = _canUseDOM2.default ? window.THEMEABLE_STYLESHEET : THEMEABLE_STYLESHEET;

  if (!sheet) {
    sheet = THEMEABLE_STYLESHEET = createSheet();

    if (_canUseDOM2.default) {
      window.THEMEABLE_STYLESHEET = sheet;
    }
  }

  return sheet;
}

function createSheet() {
  var sheet = new _sheet.StyleSheet({ speedy: !debug, maxLength: 40 });
  sheet.inject();
  return sheet;
}