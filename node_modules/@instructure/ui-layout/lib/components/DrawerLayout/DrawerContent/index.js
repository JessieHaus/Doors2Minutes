'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2; /*
                                    * The MIT License (MIT)
                                    *
                                    * Copyright (c) 2015 - present Instructure, Inc.
                                    *
                                    * Permission is hereby granted, free of charge, to any person obtaining a copy
                                    * of this software and associated documentation files (the "Software"), to deal
                                    * in the Software without restriction, including without limitation the rights
                                    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                    * copies of the Software, and to permit persons to whom the Software is
                                    * furnished to do so, subject to the following conditions:
                                    *
                                    * The above copyright notice and this permission notice shall be included in all
                                    * copies or substantial portions of the Software.
                                    *
                                    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                    * SOFTWARE.
                                    */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _debounce = require('@instructure/ui-utils/lib/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _addResizeListener = require('@instructure/ui-utils/lib/dom/addResizeListener');

var _addResizeListener2 = _interopRequireDefault(_addResizeListener);

var _getBoundingClientRect = require('@instructure/ui-utils/lib/dom/getBoundingClientRect');

var _getBoundingClientRect2 = _interopRequireDefault(_getBoundingClientRect);

var _uiThemeable = require('@instructure/ui-themeable');

var _uiThemeable2 = _interopRequireDefault(_uiThemeable);

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*  imported from styles.css  */\n\n.n71Lv48 {\n  overflow-y: auto;\n  height: 100%;\n  box-sizing: content-box;\n}\n\n._2dUZ7ie {\n  transition: margin ' + theme.duration + ';\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': 'n71Lv48',
  'transition': '_2dUZ7ie'
};


/**
---
parent: DrawerLayout
---
**/
var DrawerContent = (_dec = (0, _uiThemeable2.default)(_theme2.default, styles), _dec(_class = (_temp2 = _class2 = function (_Component) {
  _inherits(DrawerContent, _Component);

  function DrawerContent() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DrawerContent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DrawerContent.__proto__ || Object.getPrototypeOf(DrawerContent)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      shouldTransition: false
    }, _this._content = null, _this._resizeListener = null, _this._debounced = null, _this._timeouts = [], _this.handleContentRef = function (node) {
      if (typeof _this.props.contentRef === 'function') {
        _this._content = node;
        _this.props.contentRef(node);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DrawerContent, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var rect = (0, _getBoundingClientRect2.default)(this._content);
      // set initial size
      this.props.onSizeChange({ width: rect.width, height: rect.height });
      // listen for changes to size
      this._debounced = (0, _debounce2.default)(this.props.onSizeChange, 100, { leading: false, trailing: true });
      this._resizeListener = (0, _addResizeListener2.default)(this._content, this._debounced);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var _this2 = this;

      this._timeouts.push(setTimeout(function () {
        _this2.setState({
          shouldTransition: true
        });
      }));
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._resizeListener) {
        this._resizeListener.remove();
      }

      if (this._debounced) {
        this._debounced.cancel();
      }

      this._timeouts.forEach(function (timeout) {
        clearTimeout(timeout);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          style = _props.style,
          label = _props.label,
          role = _props.role;

      return _react2.default.createElement(
        'div',
        {
          role: role,
          style: style,
          ref: this.handleContentRef,
          'aria-label': label,
          className: (0, _classnames3.default)((_classnames = {}, _defineProperty(_classnames, styles.root, true), _defineProperty(_classnames, styles.transition, this.state.shouldTransition), _classnames))
        },
        this.props.children
      );
    }
  }]);

  DrawerContent.displayName = 'DrawerContent'
  ;
  return DrawerContent;
}(_react.Component), _class2.propTypes = {
  label: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.node,
  contentRef: _propTypes2.default.func,
  /**
   * Callback fired whenever the `<DrawerContent />` changes size
   */
  onSizeChange: _propTypes2.default.func,
  role: _propTypes2.default.string
}, _class2.defaultProps = {
  children: null,
  contentRef: function contentRef(node) {},
  onSizeChange: function onSizeChange(size) {},
  role: 'region'
}, _temp2)) || _class);
exports.default = DrawerContent;