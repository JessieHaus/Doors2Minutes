var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
* The MIT License (MIT)
*
* Copyright (c) 2015 - present Instructure, Inc.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

import React, { Children, Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';

import themeable from '@instructure/ui-themeable';
import CustomPropTypes from '@instructure/ui-utils/lib/react/CustomPropTypes';
import ThemeablePropTypes from '@instructure/ui-themeable/lib/utils/ThemeablePropTypes';
import safeCloneElement from '@instructure/ui-utils/lib/react/safeCloneElement';
import { omitProps } from '@instructure/ui-utils/lib/react/passthroughProps';

import View from '../View';
import FlexItem from './FlexItem';

var styles = {
  template: function template(theme) {
    var tmpl = function tmpl() {
      return '/*\n  imported from styles.css \n */\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - present Instructure, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n.FLMZSWm {\n  font-family: ' + theme.fontFamily + ';\n  box-sizing: border-box;\n}\n\n._2SoSeXR {\n  flex-direction: column;\n}\n\n._1o46vp3 {\n  flex-wrap: wrap;\n}\n\n.dMsthFz {\n  justify-content: flex-start;\n}\n\n._3-nsBbH {\n  justify-content: flex-end;\n}\n\n._3c0fvTI {\n  justify-content: center;\n}\n\n._1bz3vsU {\n  justify-content: space-around;\n}\n\n._35G6QHQ {\n  justify-content: space-between;\n}\n\n._2s_yVw0 {\n  align-items: center;\n}\n\n._3Egv5v1 {\n  align-items: flex-start;\n}\n\n._2m5UPQ4 {\n  align-items: flex-end;\n}\n\n._3_qDJsK {\n  align-items: stretch;\n}\n\n._1xD9bK_ {\n  outline: 0.0625rem dashed ' + theme.debugOutlineColor + ';\n}\n';
    };

    return tmpl.call(theme, theme);
  },
  'root': 'FLMZSWm',
  'column': '_2SoSeXR',
  'wrapItems': '_1o46vp3',
  'justifyItems--start': 'dMsthFz',
  'justifyItems--end': '_3-nsBbH',
  'justifyItems--center': '_3c0fvTI',
  'justifyItems--space-around': '_1bz3vsU',
  'justifyItems--space-between': '_35G6QHQ',
  'alignItems--center': '_2s_yVw0',
  'alignItems--start': '_3Egv5v1',
  'alignItems--end': '_2m5UPQ4',
  'alignItems--stretch': '_3_qDJsK',
  'visualDebug': '_1xD9bK_'
};

import theme from './theme';

/**
---
category: components/layout
---
**/
var Flex = (_dec = themeable(theme, styles), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Flex, _Component);

  function Flex() {
    _classCallCheck(this, Flex);

    return _possibleConstructorReturn(this, (Flex.__proto__ || Object.getPrototypeOf(Flex)).apply(this, arguments));
  }

  _createClass(Flex, [{
    key: 'renderChildren',
    value: function renderChildren() {
      var _this2 = this;

      return Children.map(this.props.children, function (child) {
        return safeCloneElement(child, Object.assign({
          visualDebug: _this2.props.visualDebug
        }, child.props, { /* child visualDebug prop should override parent */
          direction: _this2.props.direction
        }));
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _classes;

      var props = omitProps(this.props, Flex.propTypes);

      var _props = this.props,
          as = _props.as,
          direction = _props.direction,
          height = _props.height,
          inline = _props.inline,
          margin = _props.margin,
          padding = _props.padding,
          justifyItems = _props.justifyItems,
          alignItems = _props.alignItems,
          textAlign = _props.textAlign,
          visualDebug = _props.visualDebug,
          width = _props.width,
          wrapItems = _props.wrapItems;


      var classes = (_classes = {}, _defineProperty(_classes, styles.root, true), _defineProperty(_classes, styles.visualDebug, visualDebug), _defineProperty(_classes, styles.column, direction === 'column'), _defineProperty(_classes, styles['justifyItems--' + justifyItems], true), _defineProperty(_classes, styles['alignItems--' + alignItems], true), _defineProperty(_classes, styles.wrapItems, wrapItems), _classes);

      return React.createElement(
        View,
        Object.assign({}, props, {
          className: classnames(classes),
          as: as,
          display: inline ? 'inline-flex' : 'flex',
          width: width,
          height: height,
          margin: margin,
          padding: padding,
          textAlign: textAlign
        }),
        this.renderChildren()
      );
    }
  }]);

  Flex.displayName = 'Flex'
  ;
  return Flex;
}(Component), _class2.propTypes = {
  /**
  * Flex only accepts FlexItem as a child
  */
  children: CustomPropTypes.Children.oneOf([FlexItem]),
  /**
  * the element type to render as
  */
  as: CustomPropTypes.elementType,
  /**
  * Sets the flex-direction to row (horizontal) or column (vertical)
  */
  direction: PropTypes.oneOf(['row', 'column']),
  /**
  * Sets the height of the component's container (optional)
  */
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /**
  * Sets the width of the component's container (optional)
  */
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  inline: PropTypes.bool,
  textAlign: PropTypes.oneOf(['start', 'center', 'end']),
  /**
  * Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `margin="small auto large"`.
  */
  margin: ThemeablePropTypes.spacing,
  /**
  * Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,
  * `small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via
  * familiar CSS-like shorthand. For example: `padding="small x-large large"`.
  */
  padding: ThemeablePropTypes.spacing,
  alignItems: PropTypes.oneOf(['center', 'start', 'end', 'stretch']),
  justifyItems: PropTypes.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),
  /**
  * Places dashed lines around the component's borders to help debug your layout
  */
  visualDebug: PropTypes.bool,
  wrapItems: PropTypes.bool
}, _class2.defaultProps = {
  as: 'span',
  direction: 'row',
  justifyItems: 'start',
  alignItems: 'center',
  inline: false,
  visualDebug: false,
  wrapItems: false
}, _temp)) || _class);
export { Flex as default };


export { default as FlexItem } from './FlexItem';