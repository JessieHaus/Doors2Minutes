'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DIRECTION = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = bidirectional;

var _TextDirectionContextTypes = require('./TextDirectionContextTypes');

Object.defineProperty(exports, 'DIRECTION', {
  enumerable: true,
  get: function get() {
    return _TextDirectionContextTypes.DIRECTION;
  }
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getDisplayName = require('@instructure/ui-utils/lib/react/getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

var _getTextDirection = require('./utils/getTextDirection');

var _getTextDirection2 = _interopRequireDefault(_getTextDirection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * The MIT License (MIT)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 - present Instructure, Inc.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Permission is hereby granted, free of charge, to any person obtaining a copy
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * of this software and associated documentation files (the "Software"), to deal
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * in the Software without restriction, including without limitation the rights
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * copies of the Software, and to permit persons to whom the Software is
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * furnished to do so, subject to the following conditions:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * The above copyright notice and this permission notice shall be included in all
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * copies or substantial portions of the Software.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *







                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
* ---
* category: utilities/i18n
* ---
* A decorator or higher order component that makes a component `bidirectional`.
*
* As an HOC:
*
* ```js
* import bidirectional, { DIRECTION } from '@instructure/ui-i18n/lib/bidirectional'
*
* class Example extends React.Component {
*   render () {
*     return this.dir === DIRECTION.rtl ? <div>rtl</div> : <div>ltr</div>
*   }
* }
*
* export default bidirectional()(Example)
* ```
*
* When used as a child of [ApplyTextDirection](#ApplyTextDirection), bidirectional components use
* the direction provided in the context. When used without [ApplyTextDirection](#ApplyTextDirection),
* the direction can be supplied explicitly via the `dir` prop. If no `dir` prop is provided,
* bidirectional components query the documentElement for the `dir` attribute, defaulting to `ltr`
* if it is not present.
*
* @return {function} composes the bidirectional component.
*/
function bidirectional() {
  return function (ComposedComponent) {
    var _class, _temp2;

    var displayName = (0, _getDisplayName2.default)(ComposedComponent);

    var BidirectionalComponent = (_temp2 = _class = function (_ComposedComponent) {
      _inherits(BidirectionalComponent, _ComposedComponent);

      function BidirectionalComponent() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, BidirectionalComponent);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BidirectionalComponent.__proto__ || Object.getPrototypeOf(BidirectionalComponent)).call.apply(_ref, [this].concat(args))), _this), _this._defaultDirection = (0, _getTextDirection2.default)(), _temp), _possibleConstructorReturn(_this, _ret);
      }

      _createClass(BidirectionalComponent, [{
        key: 'dir',
        get: function get() {
          var context = (0, _TextDirectionContextTypes.getTextDirectionContext)(this.context) || {};

          return context.dir || this.props.dir || this._defaultDirection;
        }
      }, {
        key: 'rtl',
        get: function get() {
          return this.dir === _TextDirectionContextTypes.DIRECTION.rtl;
        }
      }, {
        key: 'ltr',
        get: function get() {
          return this.dir === _TextDirectionContextTypes.DIRECTION.ltr;
        }
      }]);

      return BidirectionalComponent;
    }(ComposedComponent), _class.displayName = displayName, _class.propTypes = Object.assign({}, ComposedComponent.propTypes, {
      dir: _propTypes2.default.oneOf(Object.values(_TextDirectionContextTypes.DIRECTION))
    }), _class.contextTypes = Object.assign({}, ComposedComponent.contextTypes, _TextDirectionContextTypes.TextDirectionContextTypes), _temp2);


    return BidirectionalComponent;
  };
}