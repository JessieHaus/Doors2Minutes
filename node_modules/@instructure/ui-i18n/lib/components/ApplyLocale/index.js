'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * The MIT License (MIT)
                    *
                    * Copyright (c) 2015 - present Instructure, Inc.
                    *
                    * Permission is hereby granted, free of charge, to any person obtaining a copy
                    * of this software and associated documentation files (the "Software"), to deal
                    * in the Software without restriction, including without limitation the rights
                    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                    * copies of the Software, and to permit persons to whom the Software is
                    * furnished to do so, subject to the following conditions:
                    *
                    * The above copyright notice and this permission notice shall be included in all
                    * copies or substantial portions of the Software.
                    *
                    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                    * SOFTWARE.
                    */

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ensureSingleChild = require('@instructure/ui-utils/lib/react/ensureSingleChild');

var _ensureSingleChild2 = _interopRequireDefault(_ensureSingleChild);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
---
category: components/utilities
---
**/
var ApplyLocale = (_temp = _class = function (_Component) {
  _inherits(ApplyLocale, _Component);

  function ApplyLocale() {
    _classCallCheck(this, ApplyLocale);

    return _possibleConstructorReturn(this, (ApplyLocale.__proto__ || Object.getPrototypeOf(ApplyLocale)).apply(this, arguments));
  }

  _createClass(ApplyLocale, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        locale: this.props.locale,
        timezone: this.props.timezone
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return (0, _ensureSingleChild2.default)(this.props.children);
    }
  }]);

  ApplyLocale.displayName = 'ApplyLocale'
  ;
  return ApplyLocale;
}(_react.Component), _class.propTypes = {
  /**
    A standard language id
  **/
  locale: _propTypes2.default.string,
  /**
    A timezone identifier in the format: Area/Location
  **/
  timezone: _propTypes2.default.string,
  /**
  * accepts only one child (children must be wrapped in a single component/element)
  */
  children: _propTypes2.default.node
}, _class.childContextTypes = {
  locale: _propTypes2.default.string,
  timezone: _propTypes2.default.string
}, _temp);
exports.default = ApplyLocale;