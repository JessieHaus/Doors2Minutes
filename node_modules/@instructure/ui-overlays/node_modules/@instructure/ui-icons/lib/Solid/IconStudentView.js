'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SVGIcon = require('@instructure/ui-svg-images/lib/components/SVGIcon');

var _SVGIcon2 = _interopRequireDefault(_SVGIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconStudentView = (_temp = _class = function (_Component) {
  _inherits(IconStudentView, _Component);

  function IconStudentView() {
    _classCallCheck(this, IconStudentView);

    return _possibleConstructorReturn(this, (IconStudentView.__proto__ || Object.getPrototypeOf(IconStudentView)).apply(this, arguments));
  }

  _createClass(IconStudentView, [{
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        _SVGIcon2.default,
        Object.assign({}, this.props, {
          name: 'IconStudentView',
          viewBox: '0 0 1920 1920'

        }),
        _react2.default.createElement('path', { d: 'M895.949 1273.174v-57.123h134.528c31.36-216.576 216.448-384 441.472-384 110.592 0 210.56 41.728 288.896 108.288-23.424-185.984-52.608-397.056-68.224-506.496-7.808-65.536-60.928-113.792-123.52-113.792h-161.152v-128H1569.1c125.312 0 231.168 96.64 246.4 224.64 4.096 28.416 103.296 732.16 103.296 863.36 0 246.912-199.808 448-446.848 448-225.024 0-410.112-167.552-441.472-384H895.949v-57.225C892.288 1530.731 692.76 1728 448 1728c-247.04 0-448-200.96-448-448 0-131.2 103.552-834.944 107.904-864.768C123.392 288.64 232.704 192 361.856 192H512v128H361.856c-64.64 0-119.168 48.256-127.104 112.256-16.128 109.44-45.952 318.464-70.016 503.552C242.176 871.936 340.096 832 448 832c244.76 0 444.288 197.269 447.949 441.174z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconStudentView.displayName = 'IconStudentView'
  ;
  return IconStudentView;
}(_react.Component), _class.glyphName = 'student-view', _class.variant = 'Solid', _class.propTypes = Object.assign({}, _SVGIcon2.default.propTypes), _temp);
exports.default = IconStudentView;