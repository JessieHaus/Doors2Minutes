var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import SVGIcon from '@instructure/ui-svg-images/lib/components/SVGIcon';

var IconZoomOut = (_temp = _class = function (_Component) {
  _inherits(IconZoomOut, _Component);

  function IconZoomOut() {
    _classCallCheck(this, IconZoomOut);

    return _possibleConstructorReturn(this, (IconZoomOut.__proto__ || Object.getPrototypeOf(IconZoomOut)).apply(this, arguments));
  }

  _createClass(IconZoomOut, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        SVGIcon,
        Object.assign({}, this.props, {
          name: 'IconZoomOut',
          viewBox: '0 0 1920 1920'

        }),
        React.createElement('path', { d: 'M853 1600c-382.293 0-693.333-311.04-693.333-693.333 0-382.294 311.04-693.334 693.333-693.334 382.293 0 693.333 311.04 693.333 693.334C1546.333 1288.96 1235.293 1600 853 1600zm997.76 228.907l-396.373-396.267C1577.587 1291.733 1653 1108.16 1653 906.667c0-441.174-358.827-800-800-800s-800 358.826-800 800c0 441.173 358.827 800 800 800 201.387 0 385.173-75.414 525.973-198.614l396.267 396.374 75.52-75.52zM479.667 960.053h746.666V853.387H479.667v106.666z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconZoomOut.displayName = 'IconZoomOut'
  ;
  return IconZoomOut;
}(Component), _class.glyphName = 'zoom-out', _class.variant = 'Line', _class.propTypes = Object.assign({}, SVGIcon.propTypes), _temp);
export { IconZoomOut as default };