'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * The MIT License (MIT)

opyright (c) 2015 - present Instructure, Inc.

ermission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

he above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.



                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE



                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * SOFTWARE.


var _findDOMNode = require('@instructure/ui-utils/lib/dom/findDOMNode');

var _findDOMNode2 = _interopRequireDefault(_findDOMNode);

var _ownerWindow = require('@instructure/ui-utils/lib/dom/ownerWindow');

var _ownerWindow2 = _interopRequireDefault(_ownerWindow);

var _getActiveElement = require('@instructure/ui-utils/lib/dom/getActiveElement');

var _getActiveElement2 = _interopRequireDefault(_getActiveElement);

var _addEventListener = require('@instructure/ui-utils/lib/dom/addEventListener');

var _addEventListener2 = _interopRequireDefault(_addEventListener);

var _ownerDocument = require('@instructure/ui-utils/lib/dom/ownerDocument');

var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

var _containsActiveElement = require('@instructure/ui-utils/lib/dom/containsActiveElement');

var _containsActiveElement2 = _interopRequireDefault(_containsActiveElement);

var _warning = require('@instructure/ui-utils/lib/warning');

var _warning2 = _interopRequireDefault(_warning);

var _requestAnimationFrame = require('@instructure/ui-utils/lib/dom/requestAnimationFrame');

var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);

var _keycode = require('keycode');

var _keycode2 = _interopRequireDefault(_keycode);

var _scopeTab = require('./scopeTab');

var _scopeTab2 = _interopRequireDefault(_scopeTab);

var _findTabbable = require('./findTabbable');

var _findTabbable2 = _interopRequireDefault(_findTabbable);

var _findFocusable = require('./findFocusable');

var _findFocusable2 = _interopRequireDefault(_findFocusable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * ---
 * category: utilities/a11y
 * ---
 * @module KeyboardFocusRegion
 * Class for focus operations.
 * - Scoping focus within a given context (DOM node),
 * - Mark active element for focus later
 * - Return focus to the marked element
 */
var KeyboardFocusRegion = function () {
  function KeyboardFocusRegion(element, options) {
    var _this = this;

    _classCallCheck(this, KeyboardFocusRegion);

    this._contextElement = null;
    this._focusLaterElement = null;
    this._needToFocus = false;
    this._listeners = [];
    this._raf = [];
    this._active = false;

    this.handleDismiss = function (event) {
      _this._options.onDismiss(event);
    };

    this.handleKeyUp = function (event) {
      if (_this._options.shouldCloseOnEscape && event.keyCode === _keycode2.default.codes.escape && !event.defaultPrevented) {
        _this.handleDismiss(event);
      }
    };

    this.handleKeyDown = function (event) {
      if (event.keyCode === _keycode2.default.codes.tab) {
        (0, _scopeTab2.default)(_this._contextElement, event, !_this.shouldContainFocus ? function () {
          _this._options.onBlur(event);
        } : null);
      }
    };

    this.handleClick = function (event) {
      _this._wasDocumentClick = true;
    };

    this.handleBlur = function (event) {
      if (_this._wasDocumentClick) {
        _this._wasDocumentClick = false;
        return;
      }
      _this._needToFocus = true;
    };

    this.handleFocus = function (event) {
      if (_this._needToFocus) {
        _this._needToFocus = false;

        if (!_this._contextElement) {
          return;
        }

        // need to see how jQuery shims document.on('focusin') so we don't need the
        // setTimeout, firefox doesn't support focusin, if it did, we could focus
        // the element outside of a setTimeout. Side-effect of this implementation
        // is that the document.body gets focus, and then we focus our element right
        // after, seems fine.
        _this._raf.push((0, _requestAnimationFrame2.default)(function () {
          if ((0, _containsActiveElement2.default)(_this._contextElement)) {
            return;
          }

          _this.firstTabbable && _this.firstTabbable.focus();
        }));
      }
    };

    this._contextElement = element;
    this._options = options || {
      shouldCloseOnEscape: true,
      shouldContainFocus: true,
      shouldReturnFocus: true,
      onBlur: function onBlur(event) {},
      onDismiss: function onDismiss(event) {},
      defaultFocusElement: null
    };

    if (this._options.shouldReturnFocus) {
      this._focusLaterElement = (0, _getActiveElement2.default)(this.doc);
    }
  }

  _createClass(KeyboardFocusRegion, [{
    key: 'updateElement',
    value: function updateElement(element) {
      this._contextElement = element;
    }
  }, {
    key: 'focus',
    value: function focus() {
      var _this2 = this;

      if (this.focused) {
        return;
      }

      var element = this._options.defaultFocusElement;

      if (typeof element === 'function') {
        element = element();
      }

      if (element) {
        element = (0, _findDOMNode2.default)(element);
      }

      if (!element) {
        element = this.firstTabbable || this.firstFocusable || this._contextElement;
      }

      this._raf.push((0, _requestAnimationFrame2.default)(function () {
        try {
          element && element.focus();
        } catch (e) {
          (0, _warning2.default)(false, '[KeyboardFocusRegion] A focusable element is required in order to set focus to a FocusRegion.');
          (0, _ownerDocument2.default)(_this2._contextElement).activeElement.blur();
        }
      }));
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._options.shouldReturnFocus && this._focusLaterElement) {
        try {
          this._focusLaterElement.focus();
        } catch (e) {
          (0, _warning2.default)(false, '\n          You tried to return focus to ' + this._focusLaterElement + '\n          but it is not in the DOM anymore: ' + e + '\n          ');
        }
        this._focusLaterElement = null;
      }
    }
  }, {
    key: 'activate',
    value: function activate() {
      if (!this._active) {
        if (this.tabbable.length > 0) {
          this._listeners.push((0, _addEventListener2.default)(this.doc, 'keydown', this.handleKeyDown));
        }

        if (this._options.shouldCloseOnEscape) {
          this._listeners.push((0, _addEventListener2.default)(this.doc, 'keyup', this.handleKeyUp));
        }

        if (this._options.shouldContainFocus) {
          this._listeners.push((0, _addEventListener2.default)(this.doc, 'click', this.handleClick, true));

          this._listeners.push((0, _addEventListener2.default)(this.win, 'blur', this.handleBlur, false));
          this._listeners.push((0, _addEventListener2.default)(this.doc, 'focus', this.handleFocus, true));
        }

        this._active = true;
      }
    }
  }, {
    key: 'deactivate',
    value: function deactivate() {
      if (this._active) {
        this._listeners.forEach(function (listener) {
          listener.remove();
        });
        this._listeners = [];

        this._raf.forEach(function (request) {
          return request.cancel();
        });
        this._raf = [];

        this._preventCloseOnDocumentClick = false;

        this._active = false;
      }
    }
  }, {
    key: 'focused',
    get: function get() {
      return (0, _containsActiveElement2.default)(this._contextElement);
    }
  }, {
    key: 'shouldContainFocus',
    get: function get() {
      var shouldContainFocus = this._options.shouldContainFocus;

      return shouldContainFocus === true || Array.isArray(shouldContainFocus) && shouldContainFocus.includes['keyboard'];
    }
  }, {
    key: 'focusable',
    get: function get() {
      return (0, _findFocusable2.default)(this._contextElement) || [];
    }
  }, {
    key: 'tabbable',
    get: function get() {
      return (0, _findTabbable2.default)(this._contextElement) || [];
    }
  }, {
    key: 'firstTabbable',
    get: function get() {
      return this.tabbable[0];
    }
  }, {
    key: 'lastTabbable',
    get: function get() {
      return this.tabbable.pop();
    }
  }, {
    key: 'firstFocusable',
    get: function get() {
      return this.focusable[0];
    }
  }, {
    key: 'lastFocusable',
    get: function get() {
      return this.focusable.pop();
    }
  }, {
    key: 'doc',
    get: function get() {
      return (0, _ownerDocument2.default)(this._contextElement);
    }
  }, {
    key: 'win',
    get: function get() {
      return (0, _ownerWindow2.default)(this._contextElement);
    }
  }]);

  return KeyboardFocusRegion;
}();

exports.default = KeyboardFocusRegion;