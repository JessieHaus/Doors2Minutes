'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findFocusable;

var _getComputedStyle = require('@instructure/ui-utils/lib/dom/getComputedStyle');

var _getComputedStyle2 = _interopRequireDefault(_getComputedStyle);

var _findDOMNode = require('@instructure/ui-utils/lib/dom/findDOMNode');

var _findDOMNode2 = _interopRequireDefault(_findDOMNode);

var _elementMatches = require('@instructure/ui-utils/lib/dom/elementMatches');

var _elementMatches2 = _interopRequireDefault(_elementMatches);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*
                                                                                                                                                                                                     * The MIT License (MIT)
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Copyright (c) 2015 - present Instructure, Inc.
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Permission is hereby granted, free of charge, to any person obtaining a copy
                                                                                                                                                                                                     * of this software and associated documentation files (the "Software"), to deal
                                                                                                                                                                                                     * in the Software without restriction, including without limitation the rights
                                                                                                                                                                                                     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                                                                                                                                                                                                     * copies of the Software, and to permit persons to whom the Software is
                                                                                                                                                                                                     * furnished to do so, subject to the following conditions:
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * The above copyright notice and this permission notice shall be included in all
                                                                                                                                                                                                     * copies or substantial portions of the Software.
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                                                                                                                                                                                                     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                                                                                                                                                                                                     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                                                                                                                                                                                                     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                                                                                                                                                                                     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                                                                                                                                                                                                     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                                                                                                                                                                                                     * SOFTWARE.
                                                                                                                                                                                                     */

/**
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 **/

/**
* ---
* category: utilities/a11y
* ---
*
* Given an element, finds and returns all visible, focusable children.
* Focusable elements include input, select, textarea, button, and object.
* Anchor tags are also focusable if they include an href or
* tabindex attribute (including tabindeces less than zero).
*
* @param {ReactComponent|DomNode} el - component or DOM node
* @param {Function} filter - a function to filter the matching nodes
* @param {Boolean} shouldSearchRootNode - should the root node be included in the search
* @returns {Array} array of all tabbable children
*/
function findFocusable(el, filter, shouldSearchRootNode) {
  var element = (0, _findDOMNode2.default)(el);

  if (!element || typeof element.querySelectorAll !== 'function') {
    return [];
  }

  var focusableSelector = 'a[href],frame,iframe,object,input:not([type=hidden]),select,textarea,button,*[tabindex]';
  var matches = element.querySelectorAll(focusableSelector);

  if (shouldSearchRootNode && (0, _elementMatches2.default)(element, focusableSelector)) {
    matches = [].concat(_toConsumableArray(matches), [element]);
  }

  return [].slice.call(matches, 0).filter(function (el) {
    if (typeof filter === 'function') {
      return filter(el) && focusable(el);
    } else {
      return focusable(el);
    }
  });
}

function hidden(element) {
  var cs = (0, _getComputedStyle2.default)(element);
  return cs.display !== 'inline' && element.offsetWidth <= 0 && element.offsetHeight <= 0 || cs.display === 'none';
}

function positioned(element) {
  var POS = ['fixed', 'absolute'];
  if (POS.includes(element.style.position.toLowerCase())) return true;
  if (POS.includes((0, _getComputedStyle2.default)(element).getPropertyValue('position').toLowerCase())) return true;
  return false;
}

function visible(element) {
  /* eslint no-param-reassign:0 */
  while (element) {
    if (element === document.body) break;
    if (hidden(element)) return false;
    if (positioned(element)) break;
    element = element.parentNode;
  }
  return true;
}

function focusable(element) {
  return !element.disabled && visible(element);
}