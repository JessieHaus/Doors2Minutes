'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * The MIT License (MIT)
                    *
                    * Copyright (c) 2015 - present Instructure, Inc.
                    *
                    * Permission is hereby granted, free of charge, to any person obtaining a copy
                    * of this software and associated documentation files (the "Software"), to deal
                    * in the Software without restriction, including without limitation the rights
                    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                    * copies of the Software, and to permit persons to whom the Software is
                    * furnished to do so, subject to the following conditions:
                    *
                    * The above copyright notice and this permission notice shall be included in all
                    * copies or substantial portions of the Software.
                    *
                    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                    * SOFTWARE.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _CustomPropTypes = require('@instructure/ui-utils/lib/react/CustomPropTypes');

var _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);

var _passthroughProps = require('@instructure/ui-utils/lib/react/passthroughProps');

var _getElementType = require('@instructure/ui-utils/lib/react/getElementType');

var _getElementType2 = _interopRequireDefault(_getElementType);

var _PresentationContent = require('../PresentationContent');

var _PresentationContent2 = _interopRequireDefault(_PresentationContent);

var _ScreenReaderContent = require('../ScreenReaderContent');

var _ScreenReaderContent2 = _interopRequireDefault(_ScreenReaderContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
---
category: components/utilities
---
*/
var AccessibleContent = (_temp = _class = function (_Component) {
  _inherits(AccessibleContent, _Component);

  function AccessibleContent() {
    _classCallCheck(this, AccessibleContent);

    return _possibleConstructorReturn(this, (AccessibleContent.__proto__ || Object.getPrototypeOf(AccessibleContent)).apply(this, arguments));
  }

  _createClass(AccessibleContent, [{
    key: 'render',
    value: function render() {
      var props = Object.assign({}, (0, _passthroughProps.omitProps)(this.props, AccessibleContent.propTypes));
      var ElementType = (0, _getElementType2.default)(AccessibleContent, this.props);

      return _react2.default.createElement(
        ElementType,
        props,
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          this.props.alt
        ),
        _react2.default.createElement(
          _PresentationContent2.default,
          null,
          this.props.children
        )
      );
    }
  }]);

  AccessibleContent.displayName = 'AccessibleContent'
  ;
  return AccessibleContent;
}(_react.Component), _class.propTypes = {
  alt: _propTypes2.default.string,
  children: _propTypes2.default.node,
  /**
  * the element type to render the screen reader content as
  */
  as: _CustomPropTypes2.default.elementType
}, _class.defaultProps = {
  as: 'span'
}, _temp);
exports.default = AccessibleContent;