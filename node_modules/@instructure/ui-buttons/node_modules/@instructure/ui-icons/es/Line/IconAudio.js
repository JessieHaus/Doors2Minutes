var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import SVGIcon from '@instructure/ui-svg-images/lib/components/SVGIcon';

var IconAudio = (_temp = _class = function (_Component) {
  _inherits(IconAudio, _Component);

  function IconAudio() {
    _classCallCheck(this, IconAudio);

    return _possibleConstructorReturn(this, (IconAudio.__proto__ || Object.getPrototypeOf(IconAudio)).apply(this, arguments));
  }

  _createClass(IconAudio, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        SVGIcon,
        Object.assign({}, this.props, {
          name: 'IconAudio',
          viewBox: '0 0 1920 1920',

          bidirectional: true

        }),
        React.createElement('path', { d: 'M484.865 564.773L936.638 113h192.794v1694.148H936.638l-451.773-451.773h-315.45C76.01 1355.375 0 1279.365 0 1185.96V734.187c0-93.404 76.01-169.414 169.415-169.414h315.45zm1187.112-203.716C1831.904 521.097 1920 733.77 1920 960.107c0 226.226-88.096 438.898-248.023 598.938l-79.851-79.85c138.694-138.695 214.93-323.018 214.93-519.087 0-196.183-76.236-380.506-214.93-519.2l79.85-79.85zm-319.64 319.03l80.528-79.285c95.663 97.018 148.294 224.644 148.294 359.272s-52.631 262.254-148.294 359.272l-80.529-79.286c74.769-75.785 115.88-175.175 115.88-279.986 0-104.811-41.111-204.201-115.88-279.986zm-335.848-454.144h-33.093l-418.68 418.68v630.901l418.68 418.68h33.093V225.944zM112.943 1185.96c0 31.172 25.412 56.472 56.472 56.472h282.358V677.716H169.415c-31.06 0-56.472 25.3-56.472 56.471v451.773z', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' })
      );
    }
  }]);

  IconAudio.displayName = 'IconAudio'
  ;
  return IconAudio;
}(Component), _class.glyphName = 'audio', _class.variant = 'Line', _class.propTypes = Object.assign({}, SVGIcon.propTypes), _temp);
export { IconAudio as default };