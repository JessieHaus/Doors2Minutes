'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.variantCircleDangerDisabled = exports.variantCircleDanger = exports.variantCirclePrimaryDisabled = exports.variantCirclePrimary = exports.variantCircleDefaultDisabled = exports.variantCircleDefault = exports.variantIconDisabled = exports.variantIcon = exports.variantGhostIconOnly = exports.variantGhostIcon = exports.variantGhostDisabled = exports.variantGhost = exports.variantLinkIconOnly = exports.variantLinkIcon = exports.variantLinkDisabled = exports.variantLink = exports.variantLightIconOnly = exports.variantLightIcon = exports.variantLightDisabled = exports.variantLight = exports.variantDangerIconOnly = exports.variantDangerIcon = exports.variantDangerDisabled = exports.variantDanger = exports.variantSuccessIconOnly = exports.variantSuccessIcon = exports.variantSuccessDisabled = exports.variantSuccess = exports.variantPrimaryIconOnly = exports.variantPrimaryIcon = exports.variantPrimaryDisabled = exports.variantPrimary = exports.variantDefaultIconOnly = exports.variantDefaultIcon = exports.variantDefaultDisabled = exports.variantDefault = exports.deprecated = exports.heightAlignment = exports.overflow = exports.sizes = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _IconTrash = require('@instructure/ui-icons/lib/Solid/IconTrash');

var _IconTrash2 = _interopRequireDefault(_IconTrash);

var _View = require('../../../../../ui-layout/lib/components/View');

var _View2 = _interopRequireDefault(_View);

var _Flex = require('../../../../../ui-layout/lib/components/Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _TextInput = require('../../../../../ui-forms/lib/components/TextInput');

var _TextInput2 = _interopRequireDefault(_TextInput);

var _Text = require('../../../../../ui-elements/lib/components/Text');

var _Text2 = _interopRequireDefault(_Text);

var _ScreenReaderContent = require('@instructure/ui-a11y/lib/components/ScreenReaderContent');

var _ScreenReaderContent2 = _interopRequireDefault(_ScreenReaderContent);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-enable instructure-ui/no-relative-package-imports */

/* eslint-disable instructure-ui/no-relative-package-imports */
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var sizes = exports.sizes = function sizes() {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _View2.default,
      { as: 'div', margin: '0 0 large' },
      _react2.default.createElement(
        _index2.default,
        { size: 'small', icon: _IconTrash2.default, variant: 'icon', margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'small', icon: _IconTrash2.default, margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'small', icon: _IconTrash2.default, variant: 'circle-danger', margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'small', margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'small', icon: _IconTrash2.default, margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'small', icon: _IconTrash2.default, variant: 'link', margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { margin: 'x-small 0 0', size: 'small', fluidWidth: true },
        'fluidWidth Button'
      )
    ),
    _react2.default.createElement(
      _View2.default,
      { as: 'div', margin: '0 0 large' },
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'icon', margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'circle-danger', margin: '0 small 0 0' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'link', margin: '0 small 0 0' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { margin: 'x-small 0 0', fluidWidth: true },
        'fluidWidth Button'
      )
    ),
    _react2.default.createElement(
      _View2.default,
      { as: 'div' },
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'icon', margin: '0 small 0 0', size: 'large' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, margin: '0 small 0 0', size: 'large' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'circle-danger', margin: '0 small 0 0', size: 'large' },
        _react2.default.createElement(
          _ScreenReaderContent2.default,
          null,
          'Delete something'
        )
      ),
      _react2.default.createElement(
        _index2.default,
        { margin: '0 small 0 0', size: 'large' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, margin: '0 small 0 0', size: 'large' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { icon: _IconTrash2.default, variant: 'link', margin: '0 small 0 0', size: 'large' },
        'Delete'
      ),
      _react2.default.createElement(
        _index2.default,
        { margin: 'x-small 0 0', size: 'large', fluidWidth: true },
        'fluidWidth Button'
      )
    )
  );
};

var overflow = exports.overflow = function overflow() {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _index2.default,
      { margin: '0 0 small 0', icon: _IconTrash2.default },
      'Buttons handle overflow with ellipsis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum nunc purus, eu molestie turpis vestibulum eu.'
    ),
    _react2.default.createElement(
      _index2.default,
      { fluidWidth: true, icon: _IconTrash2.default },
      'fluidWidth Buttons wrap text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum nunc purus, eu molestie turpis vestibulum eu.'
    )
  );
};

var heightAlignment = exports.heightAlignment = function heightAlignment() {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _Text2.default,
      { weight: 'bold' },
      'Button height should line up with the height of InstUI form inputs with the same ',
      _react2.default.createElement(
        'code',
        null,
        'size'
      ),
      ' property.'
    ),
    _react2.default.createElement(
      _Flex2.default,
      { margin: 'small 0' },
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(_TextInput2.default, {
          label: _react2.default.createElement(
            _ScreenReaderContent2.default,
            null,
            'Enter your name'
          ),
          size: 'small'
        })
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          { size: 'small' },
          'Small'
        )
      )
    ),
    _react2.default.createElement(
      _Flex2.default,
      { margin: '0 0 small' },
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(_TextInput2.default, { label: _react2.default.createElement(
            _ScreenReaderContent2.default,
            null,
            'Enter your name'
          ) })
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          null,
          'Medium'
        )
      )
    ),
    _react2.default.createElement(
      _Flex2.default,
      { margin: 'small 0 large' },
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(_TextInput2.default, {
          label: _react2.default.createElement(
            _ScreenReaderContent2.default,
            null,
            'Enter your name'
          ),
          size: 'large'
        })
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          { size: 'large' },
          'Large'
        )
      )
    ),
    _react2.default.createElement(
      _Text2.default,
      { weight: 'bold' },
      _react2.default.createElement(
        'code',
        null,
        'fluidWidth'
      ),
      ' Buttons should default to the same height as default Buttons with the corresponding ',
      _react2.default.createElement(
        'code',
        null,
        'size'
      ),
      ' property.'
    ),
    _react2.default.createElement(
      _Flex2.default,
      { margin: 'small 0' },
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(
          _index2.default,
          { fluidWidth: true, size: 'small' },
          'Small fluidWidth'
        )
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          { size: 'small' },
          'Small default'
        )
      )
    ),
    _react2.default.createElement(
      _Flex2.default,
      { margin: 'small 0' },
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(
          _index2.default,
          { fluidWidth: true },
          'Medium fluidWidth'
        )
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          null,
          'Medium default'
        )
      )
    ),
    _react2.default.createElement(
      _Flex2.default,
      null,
      _react2.default.createElement(
        _Flex.FlexItem,
        null,
        _react2.default.createElement(
          _index2.default,
          { fluidWidth: true, size: 'large' },
          'Large fluidWidth'
        )
      ),
      _react2.default.createElement(
        _Flex.FlexItem,
        { padding: '0 0 0 xx-small' },
        _react2.default.createElement(
          _index2.default,
          { size: 'large' },
          'Large default'
        )
      )
    )
  );
};

var deprecated = exports.deprecated = function deprecated() {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _Text2.default,
      { weight: 'bold' },
      'Inserting an icon as a child of Button will now produce a warning, but we need to make sure we do not break existing Buttons with icons as children.'
    ),
    _react2.default.createElement(
      _View2.default,
      { as: 'div', margin: 'small 0 0' },
      _react2.default.createElement(
        _index2.default,
        { margin: '0 small 0 0' },
        _react2.default.createElement(_IconTrash2.default, null),
        'Button label'
      ),
      _react2.default.createElement(
        _index2.default,
        { variant: 'icon', margin: '0 small 0 0' },
        _react2.default.createElement(_IconTrash2.default, null)
      ),
      _react2.default.createElement(
        _index2.default,
        { variant: 'circle-primary', margin: '0 small 0 0' },
        _react2.default.createElement(_IconTrash2.default, null)
      ),
      _react2.default.createElement(
        _index2.default,
        { size: 'large', variant: 'circle-danger', margin: '0 small 0 0' },
        _react2.default.createElement(_IconTrash2.default, null)
      )
    )
  );
};

var variantDefault = exports.variantDefault = function variantDefault() {
  return _react2.default.createElement(
    _index2.default,
    null,
    'Button Label'
  );
};

var variantDefaultDisabled = exports.variantDefaultDisabled = function variantDefaultDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { disabled: true },
    'Button Label'
  );
};

var variantDefaultIcon = exports.variantDefaultIcon = function variantDefaultIcon() {
  return _react2.default.createElement(
    _index2.default,
    { icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantDefaultIconOnly = exports.variantDefaultIconOnly = function variantDefaultIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantPrimary = exports.variantPrimary = function variantPrimary() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'primary' },
    'Button Label'
  );
};

var variantPrimaryDisabled = exports.variantPrimaryDisabled = function variantPrimaryDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'primary', disabled: true },
    'Button Label'
  );
};

var variantPrimaryIcon = exports.variantPrimaryIcon = function variantPrimaryIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'primary', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantPrimaryIconOnly = exports.variantPrimaryIconOnly = function variantPrimaryIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'primary', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantSuccess = exports.variantSuccess = function variantSuccess() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'success' },
    'Button Label'
  );
};

var variantSuccessDisabled = exports.variantSuccessDisabled = function variantSuccessDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'success', disabled: true },
    'Button Label'
  );
};

var variantSuccessIcon = exports.variantSuccessIcon = function variantSuccessIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'success', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantSuccessIconOnly = exports.variantSuccessIconOnly = function variantSuccessIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'success', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantDanger = exports.variantDanger = function variantDanger() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'danger' },
    'Button Label'
  );
};

var variantDangerDisabled = exports.variantDangerDisabled = function variantDangerDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'danger', disabled: true },
    'Button Label'
  );
};

var variantDangerIcon = exports.variantDangerIcon = function variantDangerIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'danger', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantDangerIconOnly = exports.variantDangerIconOnly = function variantDangerIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'danger', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantLight = exports.variantLight = function variantLight() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'light' },
    'Button Label'
  );
};

var variantLightDisabled = exports.variantLightDisabled = function variantLightDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'light', disabled: true },
    'Button Label'
  );
};

var variantLightIcon = exports.variantLightIcon = function variantLightIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'light', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantLightIconOnly = exports.variantLightIconOnly = function variantLightIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'light', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantLink = exports.variantLink = function variantLink() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'link' },
    'Button Label'
  );
};

var variantLinkDisabled = exports.variantLinkDisabled = function variantLinkDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'link', disabled: true },
    'Button Label'
  );
};

var variantLinkIcon = exports.variantLinkIcon = function variantLinkIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'link', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantLinkIconOnly = exports.variantLinkIconOnly = function variantLinkIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'link', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantGhost = exports.variantGhost = function variantGhost() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'ghost' },
    'Button Label'
  );
};

var variantGhostDisabled = exports.variantGhostDisabled = function variantGhostDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'ghost', disabled: true },
    'Button Label'
  );
};

var variantGhostIcon = exports.variantGhostIcon = function variantGhostIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'ghost', icon: _IconTrash2.default },
    'Button Label'
  );
};

var variantGhostIconOnly = exports.variantGhostIconOnly = function variantGhostIconOnly() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'ghost', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantIcon = exports.variantIcon = function variantIcon() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'icon', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantIconDisabled = exports.variantIconDisabled = function variantIconDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { disabled: true, variant: 'icon', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCircleDefault = exports.variantCircleDefault = function variantCircleDefault() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'circle-default', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCircleDefaultDisabled = exports.variantCircleDefaultDisabled = function variantCircleDefaultDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { disabled: true, variant: 'circle-default', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCirclePrimary = exports.variantCirclePrimary = function variantCirclePrimary() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'circle-primary', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCirclePrimaryDisabled = exports.variantCirclePrimaryDisabled = function variantCirclePrimaryDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { disabled: true, variant: 'circle-primary', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCircleDanger = exports.variantCircleDanger = function variantCircleDanger() {
  return _react2.default.createElement(
    _index2.default,
    { variant: 'circle-danger', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};

var variantCircleDangerDisabled = exports.variantCircleDangerDisabled = function variantCircleDangerDisabled() {
  return _react2.default.createElement(
    _index2.default,
    { disabled: true, variant: 'circle-danger', icon: _IconTrash2.default },
    _react2.default.createElement(
      _ScreenReaderContent2.default,
      null,
      'Button Label'
    )
  );
};